(function(){var e={8695:function(e,t,n){"use strict";var r=n(3862),s=n(6228),o=n(3396);function i(e,t,n,r,s,i){const a=(0,o.up)("router-view"),l=(0,o.up)("layout");return(0,o.wg)(),(0,o.j4)(l,null,{default:(0,o.w5)((()=>[(0,o.Wm)(a)])),_:1})}const a={class:"LayoutDefault"};function l(e,t,n,r,s,i){const l=(0,o.up)("Alert");return(0,o.wg)(),(0,o.iD)("div",a,[(0,o.WI)(e.$slots,"default",{},void 0,!0),e.alert?((0,o.wg)(),(0,o.j4)(l,{key:0,title:e.alert.title,message:e.alert.message,buttonLabel:e.alert.buttonLabel,link:e.alert.link,linkText:e.alert.linkText,onClose:t[0]||(t[0]=t=>e.setAlert(null))},null,8,["title","message","buttonLabel","link","linkText"])):(0,o.kq)("",!0)])}var d=n(7076),c=n(65),u=n(7139);const h={class:"Alert"},p={class:"Alert-panel"},m=["href"];function y(e,t,n,s,i,a){return(0,o.wg)(),(0,o.j4)(r.uT,{name:"AlertTransition",appear:""},{default:(0,o.w5)((()=>[(0,o._)("aside",h,[(0,o._)("div",{class:"Alert-overlay",onClick:t[0]||(t[0]=(...t)=>e.close&&e.close(...t))}),(0,o._)("div",p,[(0,o._)("h2",null,(0,u.zw)(e.title),1),(0,o._)("p",null,(0,u.zw)(e.message),1),e.link&&e.linkText?((0,o.wg)(),(0,o.iD)("a",{key:0,href:e.link,target:"_blank",class:"Alert-link"},(0,u.zw)(e.linkText),9,m)):(0,o.kq)("",!0),(0,o._)("button",{onClick:t[1]||(t[1]=(...t)=>e.close&&e.close(...t))},(0,u.zw)(e.buttonLabel),1)])])])),_:1})}var g=(0,o.aZ)({props:{title:{type:String,required:!0},message:{type:String,required:!0},buttonLabel:{type:String,required:!0},link:{type:String,required:!1},linkText:{type:String,required:!1}},created(){document.addEventListener("keydown",this.onKeyDown)},beforeUnmount(){document.removeEventListener("keydown",this.onKeyDown)},methods:{onKeyDown(e){27===e.keyCode&&this.close()},close(){this.$emit("close")}}}),w=n(89);const b=(0,w.Z)(g,[["render",y],["__scopeId","data-v-9f962e4e"]]);var T=b,f=(0,o.aZ)({name:"LayoutDefault",components:{Alert:T},methods:{...(0,c.OI)(["setAlert"])},computed:{...(0,c.Se)(["alert"])},mounted(){document.documentElement.classList.add("touch"===d.R8?"isTouch":"isPointer")},watch:{alert:function(e){null!==e&&(this.alert={...e})}}});const v=(0,w.Z)(f,[["render",l],["__scopeId","data-v-128d0bc8"]]);var k=v,C=(0,o.aZ)({components:{Layout:k}});const S=(0,w.Z)(C,[["render",i]]);var A=S,I=n(5658),P={logoLabel:e=>{const{normalize:t}=e;return t(["Bridge"])},connectWallet:e=>{const{normalize:t}=e;return t(["Connect Wallet"])},testnetMessage:e=>{const{normalize:t}=e;return t(["This is the testnet version. Dont send real coins!"])},deprecated:e=>{const{normalize:t}=e;return t(["Learn about new cross-chain solutions"])},read_more:e=>{const{normalize:t}=e;return t(["Read more"])},providers:{metamask:e=>{const{normalize:t}=e;return t(["Metamask"])},walletConnect:e=>{const{normalize:t}=e;return t(["WalletConnect"])},walletLink:e=>{const{normalize:t}=e;return t(["Coinbase Wallet"])}},networks:{ton:{transactionWait:e=>{const{normalize:t}=e;return t(["Please wait for the TON transaction to be processed"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Please send TON transaction in ",n(r("provider"))])},currency:e=>{const{normalize:t}=e;return t(["Toncoin"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["TON transaction completed successfully"])},transactionSend1:e=>{const{normalize:t}=e;return t(["Please send "])},transactionSend2:e=>{const{normalize:t}=e;return t(["Toncoin to the address"])},transactionSendComment:e=>{const{normalize:t}=e;return t(["with the comment"])},openWallet:e=>{const{normalize:t}=e;return t(["Open Wallet"])},generateQRCode:e=>{const{normalize:t}=e;return t(["Generate QR Code"])},scanQRCode:e=>{const{normalize:t}=e;return t(["or scan QR code below"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Not valid TON address"])}},main:{name:e=>{const{normalize:t}=e;return t(["The Open Network"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["The Open\nNetwork"])},nameShort:e=>{const{normalize:t}=e;return t(["TON"])},coin:e=>{const{normalize:t}=e;return t(["Toncoin"])},coinShort:e=>{const{normalize:t}=e;return t(["Toncoin"])}},test:{name:e=>{const{normalize:t}=e;return t(["TON Testnet"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["TON\nTestnet"])},nameShort:e=>{const{normalize:t}=e;return t(["TON"])},coin:e=>{const{normalize:t}=e;return t(["Toncoin"])},coinShort:e=>{const{normalize:t}=e;return t(["Toncoin"])}}},eth:{currency:e=>{const{normalize:t}=e;return t(["ETH"])},pageTitle:e=>{const{normalize:t}=e;return t(["TON-ETH Bridge"])},gasFee:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Ethereum gas fee ~ ",n(r("fee"))," ETH"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["Ethereum transaction completed successfully"])},transactionWait:e=>{const{normalize:t}=e;return t(["Please wait for the Ethereum transaction to be processed"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Please send Ethereum transaction in ",n(r("provider"))])},blocksConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Collected ",n(r("count"))," Ethereum block confirmations"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Not valid ETH address"])},lowBalance:e=>{const{normalize:t}=e;return t(["You need to have ETH on your wallet to pay for gas in the Ethereum network"])}},main:{name:e=>{const{normalize:t}=e;return t(["Ethereum Network"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Ethereum\nNetwork"])},nameShort:e=>{const{normalize:t}=e;return t(["ETH"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (ERC-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}},test:{name:e=>{const{normalize:t}=e;return t(["Ethereum Goerli"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Ethereum\nGoerli"])},nameShort:e=>{const{normalize:t}=e;return t(["ETH"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (ERC-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}}},bsc:{currency:e=>{const{normalize:t}=e;return t(["BNB"])},pageTitle:e=>{const{normalize:t}=e;return t(["TON-BSC Bridge"])},gasFee:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["BSC gas fee ~ ",n(r("fee"))," BNB"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["BSC transaction completed successfully"])},transactionWait:e=>{const{normalize:t}=e;return t(["Please wait for the BSC transaction to be processed"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Please send BSC transaction in ",n(r("provider"))])},blocksConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Collected ",n(r("count"))," BSC block confirmations"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Not valid BSC address"])},lowBalance:e=>{const{normalize:t}=e;return t(["You need to have BNB on your wallet to pay for gas in the BSC network"])}},main:{name:e=>{const{normalize:t}=e;return t(["Binance Smart Chain"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Binance\nSmart Chain"])},nameShort:e=>{const{normalize:t}=e;return t(["BSC"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (BEP-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}},test:{name:e=>{const{normalize:t}=e;return t(["BSC Testnet"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["BSC\nTestnet"])},nameShort:e=>{const{normalize:t}=e;return t(["BSC"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (BEP-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}}}},tokenAddress:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Token address in ",n(r("network"))," network"])},sendToken:e=>{const{normalize:t}=e;return t(["Asset"])},amountOfTon:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Amount ",n(r("tokenSymbol"))])},addressInputLabel:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Destination address in ",n(r("network"))," network"])},willReceive:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["You will receive ",n(r("fee"))," ",n(r("coin"))])},bridgeFeeAbove10:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Bridge fee - ",n(r("fee"))," TON"])},bridgeFeeBelow10:e=>{const{normalize:t}=e;return t(["Bridge fee - 5 TON + 0.25% of amount"])},tokenBridgeFee:e=>{const{normalize:t}=e;return t(["Bridge fee - 1 TON"])},tokenBridgeFeeToEvm:e=>{const{normalize:t}=e;return t(["Bridge fee - 1 TON + 0.1% of token amount"])},sourceCode:e=>{const{normalize:t}=e;return t(["Source Code"])},support:e=>{const{normalize:t}=e;return t(["Support"])},howItWorks:e=>{const{normalize:t}=e;return t(["How it works"])},documentation:e=>{const{normalize:t}=e;return t(["Documentation"])},transferHistory:e=>{const{normalize:t}=e;return t(["History"])},disconnectWallet:e=>{const{normalize:t}=e;return t(["Disconnect"])},transfer:e=>{const{normalize:t}=e;return t(["Transfer"])},getToncoin:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Get ",n(r("coin"))])},done:e=>{const{normalize:t}=e;return t(["Done"])},cancel:e=>{const{normalize:t}=e;return t(["Cancel"])},blocksConfirmationsCollected:e=>{const{normalize:t}=e;return t(["The confirmations of the blocks are collected"])},blocksConfirmationsWaiting:e=>{const{normalize:t}=e;return t(["Wait a bit for the blocks confirmations"])},oraclesConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Collected ",n(r("count"))," confirmations of oracles"])},oraclesConfirmationsCollected:e=>{const{normalize:t}=e;return t(["The confirmations of the oracles are collected"])},oraclesConfirmationsWaiting:e=>{const{normalize:t}=e;return t(["Wait a bit for the oracles to confirm the transfer"])},getCoinsByProvider:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Get ",n(r("toCoin")),"s by ",n(r("provider"))])},coinsSent:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("toCoin")),"s have been sent"])},getCoins:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Get ",n(r("toCoin")),"s in ",n(r("toNetwork"))])},confirmInWallet:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Confirm in ",n(r("provider"))])},otherTokens:e=>{const{normalize:t}=e;return t(["Other tokens"])},tokens:e=>{const{normalize:t}=e;return t(["token"])},approve:e=>{const{normalize:t}=e;return t(["Approve"])},instruction:e=>{const{normalize:t}=e;return t(["Instruction"])},errors:{alertTitleError:e=>{const{normalize:t}=e;return t(["Error"])},alertButtonClose:e=>{const{normalize:t}=e;return t(["Close"])},notValidAmount:e=>{const{normalize:t}=e;return t(["Amount is not valid number"])},amountBelow10:e=>{const{normalize:t}=e;return t(["Amount must be at least 10 TON"])},needPersonalAddress:e=>{const{normalize:t}=e;return t(["Please enter YOUR address to receive"])},toncoinBalance:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["You have only ",n(r("balance"))," ",n(r("coin"))])},installMetamask:e=>{const{normalize:t}=e;return t(["Please install MetaMask"])},wrongProviderNetwork:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Set chain to ",n(r("network"))," in ",n(r("provider"))])},cantGetAddress:e=>{const{normalize:t}=e;return t(["Can't get account address"])},providerIsDisconnected:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("provider"))," is disconnected"])}},history:{title:e=>{const{normalize:t}=e;return t(["Recent history"])},recentHistory:e=>{const{normalize:t}=e;return t(["Recent history"])},age:e=>{const{normalize:t}=e;return t(["Date"])},amountFrom:e=>{const{normalize:t}=e;return t(["Amount / From (Network)"])},amountTo:e=>{const{normalize:t}=e;return t(["Amount Received / To (Network)"])},fee:e=>{const{normalize:t}=e;return t(["Gas / Bridge Fee"])},status:e=>{const{normalize:t}=e;return t(["Status"])},completed:e=>{const{normalize:t}=e;return t(["completed"])},getToncoin:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Get ",n(r("coin"))])},connect:e=>{const{normalize:t}=e;return t(["Connect"])},oracles:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("count"))," of oracles"])},notFound:e=>{const{normalize:t}=e;return t(["No transfers found"])}}},B={logoLabel:e=>{const{normalize:t}=e;return t(["Бридж"])},connectWallet:e=>{const{normalize:t}=e;return t(["Подключить Кошелек"])},testnetMessage:e=>{const{normalize:t}=e;return t(["Работа в режиме тестовой сети. Не отправляйте реальные монеты!"])},deprecated:e=>{const{normalize:t}=e;return t(["Узнайте про новые кроссчейн решения"])},read_more:e=>{const{normalize:t}=e;return t(["Подробнее"])},providers:{metamask:e=>{const{normalize:t}=e;return t(["Metamask"])},walletConnect:e=>{const{normalize:t}=e;return t(["WalletConnect"])},walletLink:e=>{const{normalize:t}=e;return t(["Coinbase Wallet"])}},networks:{ton:{transactionWait:e=>{const{normalize:t}=e;return t(["Пожалуйста, подождите пока обрабатывается транзакция TON"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Пожалуйста, подтвердите TON транзакцию в ",n(r("provider"))])},currency:e=>{const{normalize:t}=e;return t(["Toncoin"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["Транзакция TON успешно завершена"])},transactionSend1:e=>{const{normalize:t}=e;return t(["Пожалуйста, отправьте "])},transactionSend2:e=>{const{normalize:t}=e;return t(["Toncoin на адрес"])},transactionSendComment:e=>{const{normalize:t}=e;return t(["с комментарием"])},openWallet:e=>{const{normalize:t}=e;return t(["Открыть Кошелек"])},generateQRCode:e=>{const{normalize:t}=e;return t(["Сгенерировать QR-код"])},scanQRCode:e=>{const{normalize:t}=e;return t(["или отсканируйте QR-код ниже"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Не валидный TON адрес"])}},main:{name:e=>{const{normalize:t}=e;return t(["The Open Network"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["The Open\nNetwork"])},nameShort:e=>{const{normalize:t}=e;return t(["TON"])},coin:e=>{const{normalize:t}=e;return t(["Toncoin"])},coinShort:e=>{const{normalize:t}=e;return t(["Toncoin"])}},test:{name:e=>{const{normalize:t}=e;return t(["TON Testnet"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["TON\nTestnet"])},nameShort:e=>{const{normalize:t}=e;return t(["TON"])},coin:e=>{const{normalize:t}=e;return t(["Toncoin"])},coinShort:e=>{const{normalize:t}=e;return t(["Toncoin"])}}},eth:{currency:e=>{const{normalize:t}=e;return t(["ETH"])},pageTitle:e=>{const{normalize:t}=e;return t(["TON-ETH Бридж"])},gasFee:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Комиссия Ethereum (газ) ~ ",n(r("fee"))," ETH"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["Транзакция Ethereum успешно завершена"])},transactionWait:e=>{const{normalize:t}=e;return t(["Пожалуйста, подождите пока обрабатывается транзакция Ethereum"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Пожалуйста, подтвердите Ethereum транзакцию в ",n(r("provider"))])},blocksConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Собрано ",n(r("count"))," подтверждений блоков Ethereum"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Не валидный ETH адрес"])},lowBalance:e=>{const{normalize:t}=e;return t(["У вас должны быть ETH в кошельке чтобы оплатить газ в сети Ethereum"])}},main:{name:e=>{const{normalize:t}=e;return t(["Ethereum Network"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Ethereum\nNetwork"])},nameShort:e=>{const{normalize:t}=e;return t(["ETH"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (ERC-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}},test:{name:e=>{const{normalize:t}=e;return t(["Ethereum Goerli"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Ethereum\nGoerli"])},nameShort:e=>{const{normalize:t}=e;return t(["ETH"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (ERC-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}}},bsc:{currency:e=>{const{normalize:t}=e;return t(["BNB"])},pageTitle:e=>{const{normalize:t}=e;return t(["TON-BSC Бридж"])},gasFee:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Комиссия BSC (газ) ~ ",n(r("fee"))," BNB"])},transactionCompleted:e=>{const{normalize:t}=e;return t(["Транзакция BSC успешно завершена"])},transactionWait:e=>{const{normalize:t}=e;return t(["Пожалуйста, подождите пока обрабатывается транзакция BSC"])},transactionSend:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Пожалуйста, подтвердите BSC транзакцию в ",n(r("provider"))])},blocksConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Собрано ",n(r("count"))," подтверждений блоков BSC"])},errors:{invalidAddress:e=>{const{normalize:t}=e;return t(["Не валидный BSC адрес"])},lowBalance:e=>{const{normalize:t}=e;return t(["У вас должны быть BNB в кошельке чтобы оплатить газ в сети BSC"])}},main:{name:e=>{const{normalize:t}=e;return t(["Binance Smart Chain"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["Binance\nSmart Chain"])},nameShort:e=>{const{normalize:t}=e;return t(["BSC"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (BEP-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}},test:{name:e=>{const{normalize:t}=e;return t(["BSC Testnet"])},nameSwitcher:e=>{const{normalize:t}=e;return t(["BSC\nTestnet"])},nameShort:e=>{const{normalize:t}=e;return t(["BSC"])},coin:e=>{const{normalize:t}=e;return t(["TONCOIN (BEP-20)"])},coinShort:e=>{const{normalize:t}=e;return t(["TONCOIN"])}}}},sendToken:e=>{const{normalize:t}=e;return t(["Токен"])},amountOfTon:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Количество ",n(r("tokenSymbol"))])},tokenAddress:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Адрес токена в сети ",n(r("network"))])},addressInputLabel:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Адрес получения в сети ",n(r("network"))])},willReceive:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Вы получите ",n(r("fee"))," ",n(r("coin"))])},bridgeFeeAbove10:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Комиссия бриджа - ",n(r("fee"))," TON"])},bridgeFeeBelow10:e=>{const{normalize:t}=e;return t(["Комиссия бриджа - 5 TON + 0.25% от суммы"])},tokenBridgeFee:e=>{const{normalize:t}=e;return t(["Комиссия бриджа - 1 TON"])},tokenBridgeFeeToEvm:e=>{const{normalize:t}=e;return t(["Комиссия бриджа - 1 TON + 0.1% от суммы токенов"])},sourceCode:e=>{const{normalize:t}=e;return t(["Исходный код"])},support:e=>{const{normalize:t}=e;return t(["Тех. поддержка"])},howItWorks:e=>{const{normalize:t}=e;return t(["Как это работает"])},documentation:e=>{const{normalize:t}=e;return t(["Документация"])},transferHistory:e=>{const{normalize:t}=e;return t(["История"])},disconnectWallet:e=>{const{normalize:t}=e;return t(["Отключить"])},transfer:e=>{const{normalize:t}=e;return t(["Перевод"])},getToncoin:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Получить ",n(r("coin"))])},done:e=>{const{normalize:t}=e;return t(["Готово"])},cancel:e=>{const{normalize:t}=e;return t(["Отменить"])},blocksConfirmationsCollected:e=>{const{normalize:t}=e;return t(["Собраны подтверждения блоков"])},blocksConfirmationsWaiting:e=>{const{normalize:t}=e;return t(["Пожалуйста, подождите подтверждения блоков"])},oraclesConfirmations:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Собрано ",n(r("count"))," подтверждений оракулов"])},oraclesConfirmationsCollected:e=>{const{normalize:t}=e;return t(["Собраны подтверждения оракулов"])},oraclesConfirmationsWaiting:e=>{const{normalize:t}=e;return t(["Пожалуйста, подождите подтверждения оракулов"])},getCoinsByProvider:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Получите ",n(r("toCoin"))," в ",n(r("provider"))])},coinsSent:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("toCoin"))," были отправлены"])},getCoins:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Получите ",n(r("toCoin"))," в ",n(r("toNetwork"))])},confirmInWallet:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Подтвердите в ",n(r("provider"))])},otherTokens:e=>{const{normalize:t}=e;return t(["Другие токены"])},tokens:e=>{const{normalize:t}=e;return t(["токены"])},approve:e=>{const{normalize:t}=e;return t(["Одобрить"])},instruction:e=>{const{normalize:t}=e;return t(["Инструкция"])},errors:{alertTitleError:e=>{const{normalize:t}=e;return t(["Ошибка"])},alertButtonClose:e=>{const{normalize:t}=e;return t(["Закрыть"])},notValidAmount:e=>{const{normalize:t}=e;return t(["Введено не валидное число"])},amountBelow10:e=>{const{normalize:t}=e;return t(["Количество должно быть не менее 10 TON"])},needPersonalAddress:e=>{const{normalize:t}=e;return t(["Пожалуйста, введите СВОЙ адрес для получения"])},toncoinBalance:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["У вас всего ",n(r("balance"))," ",n(r("coin"))])},installMetamask:e=>{const{normalize:t}=e;return t(["Пожалуйста, установите MetaMask"])},wrongProviderNetwork:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Переключите сеть на ",n(r("network"))," в ",n(r("provider"))])},cantGetAddress:e=>{const{normalize:t}=e;return t(["Не могу получить адрес аккаунта"])},providerIsDisconnected:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("provider"))," отключился"])}},history:{title:e=>{const{normalize:t}=e;return t(["История"])},recentHistory:e=>{const{normalize:t}=e;return t(["История"])},age:e=>{const{normalize:t}=e;return t(["Дата"])},amountFrom:e=>{const{normalize:t}=e;return t(["Количество / Откуда (сеть)"])},amountTo:e=>{const{normalize:t}=e;return t(["Получено / Куда (сеть)"])},fee:e=>{const{normalize:t}=e;return t(["Газ / Бридж комиссии"])},status:e=>{const{normalize:t}=e;return t(["Статус"])},completed:e=>{const{normalize:t}=e;return t(["завершено"])},getToncoin:e=>{const{normalize:t,interpolate:n,named:r}=e;return t(["Получить ",n(r("coin"))])},connect:e=>{const{normalize:t}=e;return t(["Подключить"])},oracles:e=>{const{normalize:t,interpolate:n,named:r}=e;return t([n(r("count"))," оракулов"])},notFound:e=>{const{normalize:t}=e;return t(["Переводы не найдены"])}}},z=(0,I.o)({legacy:!1,locale:navigator?.language?.split("-")?.[0]||"en",fallbackLocale:"en",messages:{en:P,ru:B}}),_=n(2483);const x=e=>((0,o.dD)("data-v-5d350f45"),e=e(),(0,o.Cn)(),e),E={class:"Bridge"},F={class:"Bridge-content"},N=x((()=>(0,o._)("div",null,null,-1))),D=x((()=>(0,o._)("div",{class:"Bridge-imgAspect"},null,-1))),O=[D],$={class:"Bridge-form"},L={class:"Bridge-switcherTitle"},M=x((()=>(0,o._)("em",null,null,-1))),W=["disabled","onClick"],U={key:0,class:"Bridge-switcherAnno"},H=["disabled"],V={class:"Bridge-switcherTitle"},q=x((()=>(0,o._)("em",null,null,-1))),R=["disabled","onClick"],J={key:0,class:"Bridge-switcherAnno"},j=["href"],G={class:"Bridge-bridgeWrapper"},Q={key:1,class:"Bridge-bridgeLoader"};function Z(e,t,n,s,i,a){const l=(0,o.up)("Header"),d=(0,o.up)("CustomInput"),c=(0,o.up)("BridgeProcessor"),h=(0,o.up)("Footer"),p=(0,o.up)("WalletsPopup");return(0,o.wg)(),(0,o.iD)("div",E,[(0,o.Wm)(l,{"is-testnet":e.isTestnet,"show-menu":e.isEthereumWalletConnected&&"closed"===e.walletsPopupState,ethereumProvider:e.ethereumProvider,"disable-disconnect":e.isTransferInProgress,onConnectEthereumWalletClick:e.onHeaderConnectEthereumWalletClick},null,8,["is-testnet","show-menu","ethereumProvider","disable-disconnect","onConnectEthereumWalletClick"]),(0,o._)("div",F,[N,(0,o._)("main",null,[(0,o._)("div",{class:(0,u.C_)(["Bridge-img",{isFromTon:e.isFromTon}])},O,2),(0,o._)("div",$,[(0,o._)("div",{class:(0,u.C_)(["Bridge-switchers",{isFromTon:e.isFromTon}])},[(0,o._)("div",{class:(0,u.C_)(["Bridge-switcher",{disabled:e.isPairsBlocked}])},[(0,o._)("div",L,[(0,o._)("span",null,[(0,o.Uk)((0,u.zw)(e.$t(`networks.ton.${e.netTypeName}.nameSwitcher`)),1),M]),(0,o._)("ul",{class:(0,u.C_)(["Bridge-switcherList",{left:e.isFromTon,right:!e.isFromTon}])},[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.fromPairs,((t,n)=>((0,o.wg)(),(0,o.iD)("li",{key:t},[(0,o._)("button",{disabled:0===n,onClick:n=>e.onPairClick(!0,t)},(0,u.zw)(e.$t(`networks.${t}.${e.netTypeName}.name`)),9,W)])))),128))],2)]),"ton"===e.token?((0,o.wg)(),(0,o.iD)("div",U,(0,u.zw)(e.$t(`networks.ton.${e.netTypeName}.coin`)),1)):(0,o.kq)("",!0)],2),(0,o._)("button",{class:"Bridge-switcher-arrow",disabled:e.isPairsBlocked,onClick:t[0]||(t[0]=(...t)=>e.toggleFromTon&&e.toggleFromTon(...t))},null,8,H),(0,o._)("div",{class:(0,u.C_)(["Bridge-switcher",{disabled:e.isPairsBlocked}])},[(0,o._)("div",V,[(0,o._)("span",null,[(0,o.Uk)((0,u.zw)(e.$t(`networks.${e.pair}.${e.netTypeName}.nameSwitcher`)),1),q]),(0,o._)("ul",{class:(0,u.C_)(["Bridge-switcherList",{left:!e.isFromTon,right:e.isFromTon}])},[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.toPairs,((t,n)=>((0,o.wg)(),(0,o.iD)("li",{key:n},[(0,o._)("button",{disabled:0===n,onClick:n=>e.onPairClick("ton"===t,"ton"===t?e.pair:t)},(0,u.zw)(e.$t(`networks.${t}.${e.netTypeName}.name`)),9,R)])))),128))],2)]),"ton"===e.token?((0,o.wg)(),(0,o.iD)("div",J,[(0,o._)("a",{href:e.pairNetworkCoinUrl,target:"_blank"},(0,u.zw)(e.$t(`networks.${e.pair}.${e.netTypeName}.coin`)),9,j)])):(0,o.kq)("",!0)],2)],2),(0,o.Wm)(d,{key:"token",disabled:e.isInputsBlocked||"bsc"===this.pair,label:e.$t("sendToken"),type:"text",dropdown:[{label:"Toncoin",value:"ton"},{label:"USDC",value:"usdc"},{label:"DAI",value:"dai"},{label:"WBTC",value:"wbtc"},{label:"jUSDT",value:"usdt"},{label:e.$t("otherTokens"),value:"otherTokens"}],modelValue:e.token,"onUpdate:modelValue":t[1]||(t[1]=t=>e.token=t)},null,8,["disabled","label","dropdown","modelValue"]),"otherTokens"===e.token?((0,o.wg)(),(0,o.j4)(d,{key:"tokenAddress",disabled:e.isInputsBlocked,label:e.$t("tokenAddress",{network:e.isFromTon?"TON":e.pair.toUpperCase()}),type:"text",error:e.errors.tokenAddress,onChanged:t[2]||(t[2]=t=>e.errors.tokenAddress=""),onBlur:e.checkInputs,modelValue:e.tokenAddress,"onUpdate:modelValue":t[3]||(t[3]=t=>e.tokenAddress=t)},null,8,["disabled","label","error","onBlur","modelValue"])):(0,o.kq)("",!0),(0,o.Wm)(d,{key:"amountInput",disabled:e.isInputsBlocked,label:e.$t("amountOfTon",{tokenSymbol:e.tokenSymbol}),type:"text",error:e.errors.amount,onChanged:t[4]||(t[4]=t=>e.errors.amount=""),onBlur:e.checkInputs,modelValue:e.amountInput,"onUpdate:modelValue":t[5]||(t[5]=t=>e.amountInput=t)},null,8,["disabled","label","error","onBlur","modelValue"]),(0,o.Wm)(d,{key:"toAddress",disabled:e.isInputsBlocked,label:e.$t("addressInputLabel",{network:e.isFromTon?e.pair.toUpperCase():"TON"}),type:"text",error:e.errors.toAddress,onChanged:t[6]||(t[6]=t=>e.errors.toAddress=""),onBlur:e.checkInputs,modelValue:e.toAddress,"onUpdate:modelValue":t[7]||(t[7]=t=>e.toAddress=t)},null,8,["disabled","label","error","onBlur","modelValue"]),(0,o.wy)((0,o._)("div",{class:(0,u.C_)(["Bridge-willReceive",{isFromTon:e.isFromTon}])},(0,u.zw)(e.willReceive),3),[[r.F8,!e.isTransferInProgress&&e.willReceive]]),(0,o._)("div",G,[e.isEthereumWalletConnected?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("button",{key:0,class:"Bridge-connect",onClick:t[8]||(t[8]=t=>e.walletsPopupState="opened")},(0,u.zw)(e.$t("connectWallet")),1)),e.isEthereumWalletConnected&&e.bridgeProcessorIsLoading?((0,o.wg)(),(0,o.iD)("div",Q)):(0,o.kq)("",!0),e.isEthereumWalletConnected?((0,o.wg)(),(0,o.j4)(c,{ref:"bridgeProcessor",key:e.pair,"is-testnet":e.isTestnet,"is-recover":e.isRecover,lt:e.lt,hash:e.hash,"evm-hash":e.evmHash,"is-from-ton":e.isFromTon,pair:e.pair,tokenAddress:e.getTokenAddress,amount:e.amountInput.trim(),"to-address":e.toAddress,tokenSymbol:e.tokenSymbol,ethereumProvider:e.ethereumProvider,tonConnect:e.tonConnect,token:e.token,"is-inputs-valid":e.isInputsValid,onTransferInProgress:e.onTransferInProgress,onStateChanged:e.getPairGasFee__debounced,onResetState:e.resetState,onSaveState:e.saveState,onDeleteState:e.deleteState,onReady:e.onBridgeProcessorReady,onError:e.onBridgeTransferError},null,8,["is-testnet","is-recover","lt","hash","evm-hash","is-from-ton","pair","tokenAddress","amount","to-address","tokenSymbol","ethereumProvider","tonConnect","token","is-inputs-valid","onTransferInProgress","onStateChanged","onResetState","onSaveState","onDeleteState","onReady","onError"])):(0,o.kq)("",!0)]),(0,o.wy)((0,o._)("div",{class:"Bridge-pairFee"},(0,u.zw)(e.pairFee),513),[[r.F8,!e.isTransferInProgress]]),(0,o.wy)((0,o._)("div",{class:"Bridge-bridgeFee"},(0,u.zw)(e.bridgeFee),513),[[r.F8,!e.isTransferInProgress]])])]),(0,o.Wm)(h)]),"closed"!==e.walletsPopupState?((0,o.wg)(),(0,o.j4)(p,{key:0,params:e.params,uncancellable:"opened-uncancellable"===e.walletsPopupState,onWalletConnected:e.onWalletConnected,onCancel:t[9]||(t[9]=t=>e.walletsPopupState="closed")},null,8,["params","uncancellable","onWalletConnected"])):(0,o.kq)("",!0)])}var K=n(2396),X=n.n(K),Y=n(354),ee=n.n(Y),te=n(4738),ne=n.n(te),re=n(4870),se=n(1832),oe=n.n(se);const ie=e=>((0,o.dD)("data-v-3b9dd568"),e=e(),(0,o.Cn)(),e),ae={class:"BridgeProcessor"},le=["disabled"],de=["disabled"],ce={key:3,class:"BridgeProcessor-infoWrapper"},ue={class:"BridgeProcessor-infoLine"},he={key:0,class:"BridgeProcessor-info-text"},pe={class:"BridgeProcessor-info-text-send"},me=ie((()=>(0,o._)("br",null,null,-1))),ye=ie((()=>(0,o._)("br",null,null,-1))),ge=ie((()=>(0,o._)("br",null,null,-1))),we=ie((()=>(0,o._)("br",null,null,-1))),be={class:"BridgeProcessor-info-text-send-buttons"},Te=["href"],fe={key:1,class:"BridgeProcessor-info-text-scanQRCode"},ve={class:"BridgeProcessor-info-text-QRCode",ref:"qrcode"},ke={key:1,class:"BridgeProcessor-info-text"},Ce={key:0,class:"BridgeProcessor-infoLine"},Se={class:"BridgeProcessor-info-text"},Ae={class:"BridgeProcessor-infoLine"},Ie={class:"BridgeProcessor-info-text"},Pe={class:"BridgeProcessor-infoLine"},Be={class:"BridgeProcessor-info-text"};function ze(e,t,n,s,i,a){return(0,o.wg)(),(0,o.iD)("div",ae,[0===e.state.step&&(e.isFromTon||e.hasApprove||"ton"===e.token)?((0,o.wg)(),(0,o.iD)("button",{key:0,class:(0,u.C_)(["BridgeProcessor-transfer",{showLoader:e.isInitInProgress||e.isBurningInProgress||e.isLockingInProgress}]),disabled:!e.isInputsValid,onClick:t[0]||(t[0]=(...t)=>e.onTransferClick&&e.onTransferClick(...t))},(0,u.zw)(e.$t("transfer")),11,le)):(0,o.kq)("",!0),0!==e.state.step||e.isFromTon||e.hasApprove||"ton"===e.token?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("button",{key:1,class:(0,u.C_)(["BridgeProcessor-transfer",{showLoader:e.isApprovingInProgress||e.isGetAllowanceInProcess}]),disabled:!e.isInputsValid||e.isGetAllowanceError,onClick:t[1]||(t[1]=(...t)=>e.onApproveClick&&e.onApproveClick(...t))},(0,u.zw)(e.isApprovingInProgress?e.$t("confirmInWallet",{provider:e.ethereumProvider.title}):e.$t("approve")),11,de)),e.isCancelButtonVisible?((0,o.wg)(),(0,o.iD)("button",{key:2,class:"BridgeProcessor-cancel",onClick:t[2]||(t[2]=(...t)=>e.onCancelClick&&e.onCancelClick(...t))},(0,u.zw)(e.$t("cancel")),1)):(0,o.kq)("",!0),e.state.step>0?((0,o.wg)(),(0,o.iD)("div",ce,[(0,o._)("div",ue,[(0,o._)("div",{class:(0,u.C_)(["BridgeProcessor-info-icon",{none:e.state.step<1,pending:1===e.state.step,done:e.state.step>1}])},null,2),e.getStepInfoText1.isOnlyText?((0,o.wg)(),(0,o.iD)("div",ke,(0,u.zw)(e.getStepInfoText1.text),1)):((0,o.wg)(),(0,o.iD)("div",he,[(0,o._)("div",pe,[(0,o._)("div",null,[(0,o.Uk)((0,u.zw)(e.getStepInfoText1.send1)+" ",1),(0,o._)("button",{class:"BridgeProcessor-info-text-copy",onClick:t[3]||(t[3]=(...t)=>e.onCopyClick&&e.onCopyClick(...t))},(0,u.zw)(e.getStepInfoText1.amountReadable),1),(0,o.Uk)(" "+(0,u.zw)(e.getStepInfoText1.send2),1),me,(0,o._)("button",{class:"BridgeProcessor-info-text-copy",onClick:t[4]||(t[4]=(...t)=>e.onCopyClick&&e.onCopyClick(...t))},(0,u.zw)(e.getStepInfoText1.toAddress),1),ye,(0,o.Uk)(" "+(0,u.zw)(e.getStepInfoText1.withComment),1),ge,(0,o._)("button",{class:"BridgeProcessor-info-text-copy",onClick:t[5]||(t[5]=(...t)=>e.onCopyClick&&e.onCopyClick(...t))},(0,u.zw)(e.getStepInfoText1.comment),1),we]),(0,o._)("div",be,[(0,o._)("a",{href:e.getStepInfoText1.openWalletUrl,class:"BridgeProcessor-info-text-openWallet",target:"_blank"},(0,u.zw)(e.getStepInfoText1.openWalletLabel),9,Te),e.isQRCodeShown?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("button",{key:0,class:"BridgeProcessor-info-text-generateQRCode",onClick:t[6]||(t[6]=(...t)=>e.generateQRCode&&e.generateQRCode(...t))},(0,u.zw)(e.getStepInfoText1.generateQRCode),1)),e.isQRCodeShown?((0,o.wg)(),(0,o.iD)("div",fe,(0,u.zw)(e.getStepInfoText1.scanQRCode),1)):(0,o.kq)("",!0),(0,o.wy)((0,o._)("div",ve,null,512),[[r.F8,e.isQRCodeShown]])])])]))]),e.isFromTon?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("div",Ce,[(0,o._)("div",{class:(0,u.C_)(["BridgeProcessor-info-icon",{none:e.state.step<2,pending:2===e.state.step,done:e.state.step>2}])},null,2),(0,o._)("div",Se,(0,u.zw)(e.getStepInfoText2),1)])),(0,o._)("div",Ae,[(0,o._)("div",{class:(0,u.C_)(["BridgeProcessor-info-icon",{none:e.state.step<3,pending:3===e.state.step,done:e.state.step>3}])},null,2),(0,o._)("div",Ie,(0,u.zw)(e.getStepInfoText3),1)]),(0,o._)("div",Pe,[(0,o._)("div",{class:(0,u.C_)(["BridgeProcessor-info-icon",{none:e.state.step<4,pending:4===e.state.step,done:e.state.step>4}])},null,2),(0,o._)("div",Be,(0,u.zw)(e.getStepInfoText4),1)])])):(0,o.kq)("",!0),e.isMintToncoinButtonVisible?((0,o.wg)(),(0,o.iD)("button",{key:4,class:(0,u.C_)(["BridgeProcessor-getTonCoin",{showLoader:e.isMintingInProgress}]),onClick:t[7]||(t[7]=(...t)=>e.mint&&e.mint(...t))},(0,u.zw)(e.isMintingInProgress?e.$t("confirmInWallet",{provider:e.ethereumProvider.title}):e.$t("getToncoin",{coin:e.toCoin})),3)):(0,o.kq)("",!0),e.isDoneButtonVisible?((0,o.wg)(),(0,o.iD)("button",{key:5,class:"BridgeProcessor-done",onClick:t[8]||(t[8]=(...t)=>e.onDoneClick&&e.onDoneClick(...t))},(0,u.zw)(e.$t("done")),1)):(0,o.kq)("",!0)])}var _e=n(5554),xe=n(7647),Ee=n(4806),Fe=n(9998),Ne=n.n(Fe),De=JSON.parse('{"Mt":[{"inputs":[{"internalType":"address[]","name":"initialSet","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"bytes32","name":"to_addr_hash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"decimals","type":"uint8"}],"name":"Lock","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oracleSetHash","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"newOracles","type":"address[]"}],"name":"NewOracleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"bytes32","name":"ton_address_hash","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"ton_tx_hash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"lt","type":"uint64"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Unlock","type":"event"},{"inputs":[],"name":"allowLock","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature","name":"sig","type":"tuple"}],"name":"checkSignature","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"checkTokenIsWrappedJetton","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"finishedVotings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFullOracleSet","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"newLockStatus","type":"bool"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"getNewLockStatusId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"oracleSetHash","type":"uint256"},{"internalType":"address[]","name":"set","type":"address[]"}],"name":"getNewSetId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"address_hash","type":"bytes32"},{"internalType":"bytes32","name":"tx_hash","type":"bytes32"},{"internalType":"uint64","name":"lt","type":"uint64"}],"internalType":"struct TonUtils.TonTxID","name":"tx","type":"tuple"}],"internalType":"struct TonUtils.SwapData","name":"data","type":"tuple"}],"name":"getSwapDataId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOracle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to_address_hash","type":"bytes32"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"bytes32","name":"address_hash","type":"bytes32"},{"internalType":"bytes32","name":"tx_hash","type":"bytes32"},{"internalType":"uint64","name":"lt","type":"uint64"}],"internalType":"struct TonUtils.TonTxID","name":"tx","type":"tuple"}],"internalType":"struct TonUtils.SwapData","name":"data","type":"tuple"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"oracleSetHash","type":"uint256"},{"internalType":"address[]","name":"newOracles","type":"address[]"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"voteForNewOracleSet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"newLockStatus","type":"bool"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"voteForSwitchLock","outputs":[],"stateMutability":"nonpayable","type":"function"}]}'),Oe=JSON.parse('[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address[]","name":"initialSet","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"oracleSetHash","type":"int256"},{"indexed":false,"internalType":"address[]","name":"newOracles","type":"address[]"}],"name":"NewOracleSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"int8","name":"to_wc","type":"int8"},{"indexed":true,"internalType":"bytes32","name":"to_addr_hash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SwapEthToTon","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int8","name":"workchain","type":"int8"},{"indexed":true,"internalType":"bytes32","name":"ton_address_hash","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"ton_tx_hash","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"lt","type":"uint64"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SwapTonToEth","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"allowBurn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"int8","name":"workchain","type":"int8"},{"internalType":"bytes32","name":"address_hash","type":"bytes32"}],"internalType":"struct TonUtils.TonAddress","name":"addr","type":"tuple"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"components":[{"internalType":"int8","name":"workchain","type":"int8"},{"internalType":"bytes32","name":"address_hash","type":"bytes32"}],"internalType":"struct TonUtils.TonAddress","name":"addr","type":"tuple"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature","name":"sig","type":"tuple"}],"name":"checkSignature","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"finishedVotings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFullOracleSet","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"newBurnStatus","type":"bool"},{"internalType":"int256","name":"nonce","type":"int256"}],"name":"getNewBurnStatusId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"int256","name":"oracleSetHash","type":"int256"},{"internalType":"address[]","name":"set","type":"address[]"}],"name":"getNewSetId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint64","name":"amount","type":"uint64"},{"components":[{"components":[{"internalType":"int8","name":"workchain","type":"int8"},{"internalType":"bytes32","name":"address_hash","type":"bytes32"}],"internalType":"struct TonUtils.TonAddress","name":"address_","type":"tuple"},{"internalType":"bytes32","name":"tx_hash","type":"bytes32"},{"internalType":"uint64","name":"lt","type":"uint64"}],"internalType":"struct TonUtils.TonTxID","name":"tx","type":"tuple"}],"internalType":"struct TonUtils.SwapData","name":"data","type":"tuple"}],"name":"getSwapDataId","outputs":[{"internalType":"bytes32","name":"result","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOracle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"oraclesSet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"receivedVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"unfinishedVotings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint64","name":"amount","type":"uint64"},{"components":[{"components":[{"internalType":"int8","name":"workchain","type":"int8"},{"internalType":"bytes32","name":"address_hash","type":"bytes32"}],"internalType":"struct TonUtils.TonAddress","name":"address_","type":"tuple"},{"internalType":"bytes32","name":"tx_hash","type":"bytes32"},{"internalType":"uint64","name":"lt","type":"uint64"}],"internalType":"struct TonUtils.TonTxID","name":"tx","type":"tuple"}],"internalType":"struct TonUtils.SwapData","name":"data","type":"tuple"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"voteForMinting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"oracleSetHash","type":"int256"},{"internalType":"address[]","name":"newOracles","type":"address[]"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"voteForNewOracleSet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"newBurnStatus","type":"bool"},{"internalType":"int256","name":"nonce","type":"int256"},{"components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct TonUtils.Signature[]","name":"signatures","type":"tuple[]"}],"name":"voteForSwitchBurn","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),$e=(n(3408),n(4590),n(5361)["lW"]);const Le=e=>{if(null===e||void 0===e||""===e||"0x"===e)throw new Error("checkNull");if("number"===typeof e&&isNaN(e))throw new Error("checkNaN")},Me=e=>{if(e.startsWith("0x")&&(e=e.substring(2)),e.indexOf("0x")>-1)throw new Error("removeHexPrefix");return e},We=e=>{Le(e);const t=$e.from(e).toString("hex"),n=ne().utils.bytesToHex(e);if(t!==n)throw new Error("bytesToHex");return t},Ue=e=>{Le(e);const t=$e.from(e).toString("base64"),n=ne().utils.bytesToBase64(e);if(t!==n)throw new Error("bytesToBase64");return t},He=e=>{Le(e);const t=Uint8Array.from($e.from(e,"base64")),n=ne().utils.base64ToBytes(e);if(t.join(",")!==n.join(","))throw new Error("base64ToBytes");return t},Ve=(e,t)=>{if(e.toString(2)!==t.toString(2))throw new Error("checkBN");if(e.toString(10)!==t.toString(10))throw new Error("checkBN");if(e.toString(16)!==t.toString(16))throw new Error("checkBN")},qe=e=>{Le(e);const t=new(ne().utils.BN)(e),n=BigInt(e);return Ve(t,n),t},Re=e=>{Le(e),e=Me(e);const t=new(ne().utils.BN)(e,16),n=BigInt("0x"+e);return Ve(t,n),t},Je=e=>{Le(e);const t=new(ne().utils.BN)(e),n=BigInt(e),r=t.toString(16),s=n.toString(16);if(r!==s)throw new Error("decToHex");return"0x"+r},je=e=>{Le(e),e=Me(e);const t=new(ne().utils.BN)(e,16),n=BigInt("0x"+e),r=t.toString(10),s=n.toString(10);if(r!==s)throw new Error("hexToDec");return r},Ge=(e,t)=>{Le(e),Le(t),t=Me(t);const n=qe(e).mul(qe(4294967296)).add(Re(t)),r=BigInt(e)*BigInt(4294967296)+BigInt("0x"+t);return Ve(n,r),n},Qe=e=>{Le(e);const t=qe(5e9),n=qe(25),r=qe(1e4),s=e.sub(t),o=s.mul(n).div(r),i=t.add(o),a=BigInt(5e9),l=BigInt(25),d=BigInt(1e4),c=BigInt(e.toString())-a,u=c*l/d,h=a+u;return Ve(i,h),i},Ze=e=>{Le(e);const t=e.sub(e.div(new(ne().utils.BN)(1e3))),n=BigInt(e.toString()),r=n-n/BigInt(1e3);if(r>n)throw new Error("");return Ve(t,r),t},Ke=(e,t,n)=>{let r=BigInt(0);for(let s=0;s<n;s++)r*=BigInt(2),r+=BigInt(e.get(t+s));return r},Xe=e=>{let t=Ke(e.bits,3,8);t>BigInt(127)&&(t-=BigInt(256));const n=Ke(e.bits,11,256);if(t.toString(10)+":"+n.toString(16)==="0:0")return null;const r=t.toString(10)+":"+n.toString(16).padStart(64,"0");return new(ne().Address)(r)};async function Ye(e,t){try{const n=await e.provider.call2(t,"get_wallet_data"),r=n[0];return r}catch(n){if(-13===n.result.exit_code)return qe(0);throw n}}async function et(e,t){const n=await e.provider.call2(t,"get_wrapped_token_data",[]),r=Number(n[0].toString()),s="0x"+n[1].toString("hex"),o=Number(n[2].toString());return Le(r),Le(s),Le(o),{chainId:r,tokenAddress:s,decimals:o}}async function tt({tonweb:e,userTonAddress:t,tokenAddress:n}){const r=new(ne().boc.Cell);r.bits.writeAddress(t);const s=await e.provider.call2(n,"get_wallet_address",[["tvm.Slice",Ue(await r.toBoc(!1))]]),o=Xe(s);return o}async function nt(e,t,n){const r=await e.provider.call2(t,"get_minter_address",[["tvm.Cell",Ue(await n.toBoc(!1))]]),s=Xe(r);return s}n(7658);async function rt({tonConnect:e,destinationAddress:t,userTonAddress:n,jettonWalletAddress:r,jettonAmountWithDecimals:s}){if(!e.connected)throw new Error("TON not connected");if(!r)throw new Error("no jettonWalletAddress");const o=1499400124,i=new(ne().utils.BN)(0),a=new(ne().boc.Cell);a.bits.writeUint(o,32);const l=new(ne().boc.Cell);l.bits.writeUint(t,160),a.bits.writeUint(i,64),a.bits.writeCoins(s),a.bits.writeAddress(n),a.bits.writeBit(1),a.refs.push(l);const d=ne().utils.bytesToBase64(await a.toBoc(!1));await e.sendTransaction({validUntil:Math.floor(Date.now()/1e3)+60,messages:[{address:r.toString(!0,!0,!0),amount:ne().utils.toNano("1").toString(),payload:d}]})}async function st({tonConnect:e,queryId:t,bridgeTonAddress:n}){if(!e.connected)throw new Error("TON not connected");const r=8,s=new(ne().boc.Cell);s.bits.writeUint(r,32),s.bits.writeUint(qe(t),64),s.bits.writeUint(qe(t),256);const o=ne().utils.bytesToBase64(await s.toBoc(!1));await e.sendTransaction({validUntil:Math.floor(Date.now()/1e3)+60,messages:[{address:n,amount:ne().utils.toNano("1").toString(),payload:o}]})}function ot(e){const t=e.target;let n,r;const s=e=>{t&&(t.classList.remove(e),clearTimeout(n),clearTimeout(r),n=setTimeout((()=>{t.classList.add(e)}),17),r=setTimeout((()=>{t.classList.remove(e)}),500))};navigator&&navigator.clipboard&&navigator.clipboard.writeText?navigator.clipboard.writeText(t.innerText).then((function(){s("success")}),(function(){s("failure")})):s("failure")}var it=n(7450),at=n(5941);const lt=e=>parseInt(e[1],16),dt=e=>{if(!e)return null;for(const t of e)if(""===t.destination)return t;return null},ct=e=>{if(!e.message.endsWith("\n"))throw new Error("need \\n");const t=e.message.substr(0,e.message.length-1);return He(t)},ut=e=>{const t=e.msg_data?.text,n=He(t),r=new Uint8Array(n.length+4);return r.set(n,4),r},ht=e=>{const t=e.msg_data["@type"];return"msg.dataText"===t?ut(e):"msg.dataRaw"===t?ct(e):(at.error("Unknown log msg type "+t),null)},pt=e=>{if(!e.startsWith("0x"))throw new Error("Invalid address "+e);let t=e.substr(2);while(t.length<40)t="0"+t;return"0x"+t};var mt=n(6482),yt=n(5941);const gt=e=>{if(27!==e&&28!==e)throw new Error("invalid v")},wt=e=>{const t=e.tuple.elements,n=pt(Je(t[0].number.number)),r=t[1].tuple.elements,s=Je(r[0].number.number),o=Je(r[1].number.number),i=Number(r[2].number.number);return gt(i),{publicKey:n,r:s,s:o,v:i}};async function bt(e,t,n){const r=je(n);yt.log("getEvmSignaturesFromCollector ",n,r);const s=await e.provider.call(t,"get_external_voting_data",[["num",r]]);if(yt.log("getEvmSignaturesFromCollector raw result",s),309===s.exit_code)return yt.log("getEvmSignaturesFromCollector 309 no found"),null;const o=s.stack[0][1].elements,i={signatures:o.map(wt)};return yt.log("getEvmSignaturesFromCollector parsed result",i),i}function Tt(e){return e.map((e=>({signer:e.publicKey,signature:mt.gV({r:e.r,s:e.s,v:e.v})}))).sort(((e,t)=>Re(e.signer).cmp(Re(t.signer))))}function ft(e){const t=oe().utils.sha3(e);if(!t)throw new Error("empty hash");return t}const vt=2592e3;function kt(e){const t=2,n=e.blockTime+vt+t;function r(e){const t=e.split("");return t[66]="0",t[67]="0",t[68]="0",t[69]="0",t[133]=t[132],t[132]="0",t.join("")}const s=ft(r(e.blockHash+"_"+e.transactionHash+"_"+String(e.logIndex))).substr(2,8);return Ge(n,s)}var Ct=n(2482),St=n(6796),At=JSON.parse('{"Mt":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]}');class It{constructor(e){(0,Ct.Z)(this,"contracts",{}),(0,Ct.Z)(this,"provider",void 0),this.provider=e}_getContract(e){return Object.keys(this.contracts).includes(e)&&this.contracts[e].provider?this.contracts[e]:this._registerContract(e)}_registerContract(e){const t=new St.CH(e,At.Mt,this.provider.provider);return this.contracts[e]=t,t}symbol(e){const t=this._getContract(e);return t.symbol()}decimals({address:e}){const t=this._getContract(e);return t.decimals()}balanceOf({address:e,account:t}){const n=this._getContract(e);return n.balanceOf(t)}allowance({address:e,owner:t,spender:n}){const r=this._getContract(e);return r.allowance(t,n)}approve({address:e,spender:t,amount:n}){const r=this._getContract(e);return r.connect(this.provider.provider.getSigner()).approve(t,n)}}var Pt=n(5941);const Bt=1687780800,zt=1716552e3,_t="0xdAC17F958D2ee523a2206206994597C13D831ec7".toLowerCase(),xt=65;function Et(e,t){const n=e[t];if(null===n||void 0===n)throw new Error('no "'+t+'"');return n}function Ft(e,t){const n=Et(e,t);if(66!==n.length||!n.startsWith("0x"))throw new Error("invalid eth tx hash "+n);return n.toLowerCase()}function Nt(e,t){const n=Et(e,t);if(66!==n.length||!n.startsWith("0x"))throw new Error("invalid eth block hash "+n);return n.toLowerCase()}function Dt(e,t){const n=Et(e,t);if(42!==n.length||!n.startsWith("0x"))throw new Error("invalid eth address "+n);return n.toLowerCase()}function Ot(e,t){const n=Number(Et(e,t));if(isNaN(n))throw new Error("invalid number "+n);if(n<0)throw new Error("number is negative "+n);return n}function $t(e,t){const n=Et(e,t);if(66!==n.length||!n.startsWith("0x"))throw new Error("invalid ton address "+n);return n.slice(2).toLowerCase()}function Lt(e,t){const n=Number(Et(e,t));if(0!==n&&-1!==n)throw new Error("invalid wc "+n);return n}function Mt(e,t){const n=Number(Et(e,t));if(!(n>=0&&n<=255))throw new Error("invalid decimals "+n);return n}function Wt(e,t){const n=Et(e,t),r=qe(n);if(r.lte(qe(0)))throw new Error("bn is negative "+n);return n}async function Ut(e,t){const n=await e.methods.finishedVotings(t).call();if(Pt.log({isFinished:n}),!0!==n&&!1!==n)throw alert("isFinished unexpected result"),new Error("isFinished unexpected result");if(n)throw alert("Already finished"),new Error("already finished")}var Ht=n(5941);const Vt=202,qt="0xe057fbff";class Rt{static getFeeAmount(e){return Qe(e)}static getDataId(e,t,n){return Le(t.receiver),Le(t.amount),Le(t.tx.address_.workchain),Le(t.tx.address_.address_hash),Le(t.tx.tx_hash),Le(t.tx.lt),ft(n?e.eth.abi.encodeParameters(["int","address","address","uint256","int8","bytes32","bytes32","uint64"],[55930,n,t.receiver,t.amount,t.tx.address_.workchain,t.tx.address_.address_hash,t.tx.tx_hash,t.tx.lt]):e.eth.abi.encodeParameters(["int","address","uint256","int8","bytes32","bytes32","uint64"],[55930,t.receiver,t.amount,t.tx.address_.workchain,t.tx.address_.address_hash,t.tx.tx_hash,t.tx.lt]))}static getNewSetId(e,t,n,r){return ft(r?e.eth.abi.encodeParameters(["int","address","int","address[]"],[1511,r,t,n]):e.eth.abi.encodeParameters(["int","int","address[]"],[1511,t,n]))}static getNewBurnStatusId(e,t,n,r){return ft(r?e.eth.abi.encodeParameters(["int","address","bool","int"],[45074,r,t,n]):e.eth.abi.encodeParameters(["int","bool","int"],[45074,t,n]))}static createMultisigMsgBody(e){const t=new(ne().boc.Cell);return t.bits.writeUint(qe(4),32),t.bits.writeUint(qe(0),8),t.bits.writeUint(Re(e.transactionHash),256),t.bits.writeInt(qe(e.logIndex),16),t.bits.writeInt(e.to.workchain,8),t.bits.writeUint(Re(e.to.address_hash),256),t.bits.writeUint(qe(e.value),64),t}}(0,Ct.Z)(Rt,"findLog",((e,t,n,r,s,o)=>{let i=0,a=null;for(const l of o)if(3===l.topics.length&&l.topics[1].toLowerCase().endsWith(t.substr(2).toLowerCase())&&l.topics[2]==="0x"+s){const t=e.eth.abi.decodeParameters(["int256","uint256"],l.data);t[0]===r&&t[1]===n&&(a=l,i++)}if(i>1)throw new Error("too many logs");return a})),(0,Ct.Z)(Rt,"isValidBurn",((e,t)=>e.to.toLowerCase()===t.toLowerCase()&&(e.from.toLowerCase()!==t.toLowerCase()&&("0"===e.isError&&("1"===e.txreceipt_status&&(!!e.input&&(e.input.length===Vt&&(!!e.input.startsWith(qt)&&!(e.confirmations<xt))))))))),(0,Ct.Z)(Rt,"processEvmTransaction",(async(e,t,n,r,s)=>{const o=Ot(n,"blockNumber"),i=Ft(n,"hash"),a=Ot(n,"timeStamp"),l=Nt(n,"blockHash"),d=Ot(n,"transactionIndex"),c=Dt(n,"from"),u=(Dt(n,"to"),n.input);if(u.length!==Vt)throw new Error("invalid input length "+u);if(!u.startsWith(qt))throw new Error(`input ${qt} `+u);const h=e.eth.abi.decodeParameters(["uint256","int8","bytes32"],"0x"+u.slice(10)),p=Wt(h,"0"),m=Lt(h,"1"),y=$t(h,"2");if(!r||0===Object.keys(r).length)throw new Error("no receipt");if(l!==r.blockHash.toLowerCase())throw new Error("invalid blockHash");if(o!==r.blockNumber)throw new Error("invalid blockNumber");if(c!==r.from.toLowerCase())throw new Error("invalid from");if(!r.status)throw new Error("invalid status");if(t.toLowerCase()!==r.to.toLowerCase())throw new Error("invalid to");if(i!==r.transactionHash.toLowerCase())throw new Error("invalid transactionHash");if(d!==r.transactionIndex)throw new Error("invalid transactionIndex");const g=Rt.findLog(e,c,p,m.toString(),y,r.logs);if(!g)throw new Error("cant find log");const w=Ot(g,"logIndex");if(s-r.blockNumber<xt)throw new Error("No block confirmations "+(s-r.blockNumber)+"("+s+"-"+r.blockNumber+")");return{type:"SwapEthToTon",transactionHash:i,logIndex:w,blockNumber:o,blockTime:a,blockHash:l,from:c,to:{workchain:m,address_hash:y},value:p,rawData:g.data,topics:g.topics,transactionIndex:d}})),(0,Ct.Z)(Rt,"processTonTransaction",(e=>{const t=dt(e.out_msgs);if(!t)return null;const n=ht(t);if(null===n)return null;if(28!==n.length)return null;const r=pt("0x"+We(n.slice(0,20))),s=We(n.slice(20,28)),o=Re(s),i=new(ne().utils.Address)(e.in_msg.source),a=(new TextDecoder).decode(He(e.in_msg.msg_data.text));if(!a.startsWith("swapTo#"))throw new Error("need swapTo#");const l=a.slice("swapTo#".length);if(r.toLowerCase()!==l.toLowerCase())return Ht.error("address from in_msg doesnt match ",l,r),null;const d=qe(e.in_msg.value),c=d.sub(Rt.getFeeAmount(d));return o.eq(c)?{type:"SwapTonToEth",receiver:r,amount:o.toString(),tx:{address_:{workchain:i.wc,address_hash:"0x"+We(i.hashPart)},tx_hash:"0x"+We(He(e.transaction_id.hash)),lt:e.transaction_id.lt},time:Number(e.utime)}:(Ht.error("amount from in_msg doesnt match ",o.toString(),c.toString(),d.toString()),null)}));const Jt=202,jt="0xca3369c6",Gt=["uint256","uint256","uint8"];class Qt{static getDataId(e,t,n,r){return Le(n),Le(r),Le(t.ethReceiver),Le(t.token),Le(t.jettonAmount),Le(t.tx.address_.address_hash),Le(t.tx.tx_hash),Le(t.tx.lt),ft(e.eth.abi.encodeParameters(["int","address","uint256","address","address","uint256","bytes32","bytes32","uint64"],[55930,n,r,t.ethReceiver,t.token,t.jettonAmount,t.tx.address_.address_hash,t.tx.tx_hash,t.tx.lt]))}static getNewSetId(e,t,n,r,s){return ft(e.eth.abi.encodeParameters(["int","address","uint256","int","address[]"],[1511,r,s,t,n]))}static getNewLockStatusId(e,t,n,r,s){return Le(t),Le(n),Le(r),Le(s),ft(e.eth.abi.encodeParameters(["int","address","uint256","bool","int"],[45074,r,s,t,n]))}static createMultisigMsgBody(e,t,n){const r=new(ne().boc.Cell);return r.bits.writeUint(qe(4),32),r.bits.writeUint(t,64),r.bits.writeUint(qe(0),8),r.bits.writeUint(Re(e.transactionHash),256),r.bits.writeInt(qe(e.logIndex),16),r.bits.writeUint(Re(e.to_address_hash),256),r.bits.writeCoins(qe(e.amount)),r.bits.writeCoins(qe(0)),r.refs.push(this.createWrappedTokenData(n,e.token,e.decimals)),r}}(0,Ct.Z)(Qt,"findLog",((e,t,n,r,s,o)=>{let i=0,a=null;for(const l of o)if(4===l.topics.length&&l.topics[1].toLowerCase().endsWith(t.substr(2).toLowerCase())&&l.topics[2].toLowerCase().endsWith(s.substr(2).toLowerCase())&&l.topics[3]==="0x"+r){if(194!==l.data.length)throw new Error("invalid Lock event data length");a=l,i++}if(i>1)throw new Error("too many logs");return a})),(0,Ct.Z)(Qt,"createWrappedTokenData",((e,t,n)=>{const r=new(ne().boc.Cell);return r.bits.writeUint(qe(e),32),r.bits.writeUint(Re(t),160),r.bits.writeUint(qe(n),8),r})),(0,Ct.Z)(Qt,"isValidLock",((e,t)=>e.to.toLowerCase()===t.toLowerCase()&&(e.from.toLowerCase()!==t.toLowerCase()&&("0"===e.isError&&("1"===e.txreceipt_status&&(!!e.input&&(e.input.length===Jt&&(!!e.input.startsWith(jt)&&!(e.confirmations<xt))))))))),(0,Ct.Z)(Qt,"processEvmTransaction",(async(e,t,n,r,s)=>{const o=Ot(n,"blockNumber"),i=Ft(n,"hash"),a=Ot(n,"timeStamp"),l=Nt(n,"blockHash"),d=Ot(n,"transactionIndex"),c=Dt(n,"from"),u=(Dt(n,"to"),n.input);if(u.length!==Jt)throw new Error("invalid input length "+u);if(!u.startsWith(jt))throw new Error(`input ${jt} `+u);const h=["address","uint256","bytes32"],p="0x"+u.slice(10),m=e.eth.abi.decodeParameters(h,p),y=Dt(m,"0"),g=Wt(m,"1"),w=$t(m,"2");if(!r||0===Object.keys(r).length)throw new Error("no receipt");if(l!==r.blockHash.toLowerCase())throw new Error("invalid blockHash");if(o!==r.blockNumber)throw new Error("invalid blockNumber");if(c!==r.from.toLowerCase())throw new Error("invalid from");if(!r.status)throw new Error("invalid status");if(t.toLowerCase()!==r.to.toLowerCase())throw new Error("invalid to");if(i!==r.transactionHash.toLowerCase())throw new Error("invalid transactionHash");if(d!==r.transactionIndex)throw new Error("invalid transactionIndex");const b=Qt.findLog(e,c,g,w,y,r.logs);if(!b)throw new Error("cant find log");const T=Ot(b,"logIndex");if(s-r.blockNumber<xt)throw new Error("No block confirmations "+(s-r.blockNumber)+"("+s+"-"+r.blockNumber+")");const f=e.eth.abi.decodeParameters(Gt,b.data),v=Wt(f,0),k=(Wt(f,1),Mt(f,2));return{type:"Lock",transactionHash:i,logIndex:T,blockNumber:o,blockTime:a,blockHash:l,from:c,token:y,to_address_hash:w,amount:v,decimals:k,rawData:b.data,topics:b.topics,transactionIndex:d}})),(0,Ct.Z)(Qt,"processTonTransaction",(e=>{const t=dt(e.out_msgs);if(!t)return null;const n=ht(t);if(null===n)return null;if(88!==n.length)return null;const r=pt("0x"+We(n.slice(0,20))),s=We(n.slice(20,36));let o=Re(s);const i=pt("0x"+We(n.slice(36,56))),a=We(n.slice(56,88)),l=new(ne().utils.Address)(e.in_msg.source);return i.toLowerCase()===_t&&Number(e.utime)>zt||Number(e.utime)>Bt&&(o=Ze(o)),{type:"Burn",ethReceiver:r,token:i,jettonAmount:o.toString(),tx:{address_:{workchain:0,address_hash:"0x"+a},tx_hash:"0x"+We(He(e.transaction_id.hash)),lt:e.transaction_id.lt},time:Number(e.utime),jettonMinterAddress:l.toString()}})),(0,Ct.Z)(Qt,"processPayJettonMintTransaction",(e=>{const t=dt(e.out_msgs);if(!t)return null;const n=ht(t);if(null===n)return null;if(32!==n.length)return null;const r=We(n.slice(0,32)),s=Re(r),o=new(ne().utils.Address)(e.in_msg.source);return{type:"PayJettonMint",queryId:s.toString(),tx:{address_:{workchain:o.wc,address_hash:"0x"+We(o.hashPart)},tx_hash:"0x"+We(He(e.transaction_id.hash)),lt:e.transaction_id.lt},time:Number(e.utime)}}));var Zt=n(5941);async function Kt(e,t,n,r){Zt.log("getVotesInMultisig ",n);const s=await e.provider.call(t,"get_query_state",[["num",n]]),o=lt(s.stack[0]),i=lt(s.stack[1]),a=[],l=-1===o?r:i.toString(2).split("0").join("").length;for(let d=0;d<l;d++)a.push(1);return a}var Xt=n(5941);const Yt=ne().utils.fromNano,en=ne().utils.toNano;var tn=(0,o.aZ)({props:{isTestnet:{type:Boolean,required:!0},isRecover:{type:Boolean,required:!0},lt:{type:Number,required:!0},hash:{type:String,required:!0},evmHash:{type:String,required:!0},isFromTon:{type:Boolean,required:!0},pair:{type:String,required:!0},tokenAddress:{type:String,required:!0},tokenSymbol:{type:String,required:!0},amount:{type:String,required:!0},token:{type:String,required:!0},toAddress:{type:String,required:!0},ethereumProvider:{type:Object,required:!0},tonConnect:{type:Object,required:!0},isInputsValid:{type:Boolean,required:!0}},data(){return{updateStateIntervalForToncoin:null,updateStateIntervalForJettons:null,providerDataForToncoin:null,providerDataForJettons:null,ethToTon:null,isInitInProgress:!1,isMintingInProgress:!1,isApprovingInProgress:!1,isGetAllowanceInProcess:!1,isGetAllowanceError:!0,isBurningInProgress:!1,isLockingInProgress:!1,isQRCodeShown:!1,hasApprove:!1,state:{swapId:"",queryId:"0",jettonEvmAddress:"",fromCurrencySent:!1,toCurrencySent:!1,step:0,votes:[],swapData:null,burnData:null,createTime:0,blockNumber:0}}},computed:{isToncoinTransfer(){return"ton"===this.token},netTypeName(){return this.isTestnet?"test":"main"},params(){const e=it.zK.networks[this.pair];return e[this.netTypeName]},isMintToncoinButtonVisible(){return this.isToncoinTransfer?this.isFromTon&&!this.state.toCurrencySent&&4===this.state.step:this.isFromTon?!this.state.toCurrencySent&&4===this.state.step:3==this.state.step},isDoneButtonVisible(){return this.state.step>4},isCancelButtonVisible(){return this.isFromTon&&1===this.state.step},fromCoin(){return this.isFromTon?this.$t(`networks.ton.${this.netTypeName}.coinShort`):this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`)},toCoin(){return this.isToncoinTransfer?this.isFromTon?this.$t(`networks.${this.pair}.${this.netTypeName}.coinShort`):this.$t(`networks.ton.${this.netTypeName}.coinShort`):this.tokenSymbol},getStepInfoText1(){if(1===this.state.step){if(this.isFromTon){if(this.isToncoinTransfer){const e=it.zK.tonTransferUrl.replace("<BRIDGE_ADDRESS>",this.params.tonBridgeAddress).replace("<AMOUNT>",en(this.amount).toString()).replace("<TO_ADDRESS>",this.toAddress);return{isOnlyText:!1,send1:this.$t("networks.ton.transactionSend1"),amountReadable:this.amount,send2:this.$t("networks.ton.transactionSend2"),toAddress:this.params.tonBridgeAddress,withComment:this.$t("networks.ton.transactionSendComment"),comment:"swapTo#"+this.toAddress,openWalletLabel:this.$t("networks.ton.openWallet"),openWalletUrl:e,generateQRCode:this.isQRCodeShown?"":this.$t("networks.ton.generateQRCode"),scanQRCode:this.isQRCodeShown?this.$t("networks.ton.scanQRCode"):""}}return{isOnlyText:!0,text:this.state.fromCurrencySent?this.$t("networks.ton.transactionWait"):this.$t("networks.ton.transactionSend",{provider:"TON Wallet"})}}return{isOnlyText:!0,text:this.state.fromCurrencySent?this.$t(`networks.${this.pair}.transactionWait`):this.$t(`networks.${this.pair}.transactionSend`,{provider:this.ethereumProvider.title})}}{const e=this.isFromTon?"ton":this.pair;return{isOnlyText:!0,text:this.$t(`networks.${e}.transactionCompleted`)}}},getStepInfoText2(){if(this.isFromTon)return"";const e=this.isToncoinTransfer?this.providerDataForToncoin:this.providerDataForJettons;if(2===this.state.step){let t=(e?.blockNumber||this.state.blockNumber)-this.state.blockNumber;return t=Math.max(Math.min(t,this.params.blocksConfirmations),0),this.$t(`networks.${this.pair}.blocksConfirmations`,{count:String(t)+"/"+String(this.params.blocksConfirmations)})}return this.state.step>2?this.$t("blocksConfirmationsCollected"):this.$t("blocksConfirmationsWaiting")},getStepInfoText3(){return this.isToncoinTransfer||this.isFromTon?this.getOraclesText(3):this.getGetCoinsText(3,!0)},getStepInfoText4(){return this.isToncoinTransfer||this.isFromTon?this.getGetCoinsText(4,!1):this.getOraclesText(4)}},watch:{"state.step":{immediate:!0,handler(e){this.$emit("state-changed"),this.$emit("transfer-in-progress",e>0)}},token:{immediate:!0,handler(e){this.onTokenChange(e)}}},mounted(){this.$watch((()=>this.amount+"_"+this.tokenAddress+"_"+this.ethereumProvider?.myAddress+"_"+this.token+"_"+this.isFromTon+"_"+this.isInputsValid),(0,Ee.debounce)((async()=>{this.checkAllowance()}),300)),this.checkAllowance(),this.$emit("ready")},beforeDestroy(){clearInterval(this.updateStateIntervalForToncoin),clearInterval(this.updateStateIntervalForJettons)},methods:{onCopyClick:ot,makeAddress:pt,parseEvmSignature:wt,getQueryId:kt,...(0,c.OI)({setAlert:"setAlert"}),async mint(){if(this.isFromTon)this.isToncoinTransfer?await this.mintWrappedToncoin():await this.unlockToken();else{if(this.isToncoinTransfer)throw new Error("can never happen");await this.mintJetton()}},onTokenChange(e){clearInterval(this.updateStateIntervalForToncoin),clearInterval(this.updateStateIntervalForJettons),"ton"===e?(this.updateStateForToncoin(),this.updateStateIntervalForToncoin=setInterval(this.updateStateForToncoin,5e3)):(this.updateStateForJettons(),this.updateStateIntervalForJettons=setInterval(this.updateStateForJettons,5e3))},getOraclesText(e){if(this.state.step===e){const e=this.isToncoinTransfer?this.providerDataForToncoin:this.providerDataForJettons,t=this.state.votes.length+"/"+(e?.oraclesTotal||0);return this.$t("oraclesConfirmations",{count:String(t)})}return this.state.step>e?this.$t("oraclesConfirmationsCollected"):this.$t("oraclesConfirmationsWaiting")},getGetCoinsText(e,t){const n=this.toCoin||this.$t("tokens");if(this.state.step===e)return this.state.toCurrencySent?this.$t(`networks.${this.pair}.transactionWait`):this.$t("getCoinsByProvider",{provider:t?"TON Wallet":this.ethereumProvider.title,toCoin:n});if(this.state.step>e)return this.$t("coinsSent",{toCoin:n});{const e=this.isFromTon?this.pair:"ton";return this.$t("getCoins",{toCoin:n,toNetwork:this.$t(`networks.${e}.${this.netTypeName}.name`)})}},generateQRCode(){this.isQRCodeShown=!0;const e=it.zK.tonTransferUrl.replace("<BRIDGE_ADDRESS>",this.params.tonBridgeAddress).replace("<AMOUNT>",en(this.amount).toString()).replace("<TO_ADDRESS>",this.toAddress),t={data:e,width:225*window.devicePixelRatio,height:225*window.devicePixelRatio,image:n(1793),dotsOptions:{color:"#000000",type:"extra-rounded"},cornersSquareOptions:{color:"#000000",type:"extra-rounded"},cornersDotOptions:{color:"#000000",type:"dot"},imageOptions:{hideBackgroundDots:!0,crossOrigin:"use-credentials",imageSize:1},qrOptions:{errorCorrectionLevel:"L"}},r=new(Ne())(t);r.append(this.$refs.qrcode)},async initProvider(e){if(e){if(!this.providerDataForToncoin&&(this.providerDataForToncoin=await this.initProviderForToncoin(),!this.providerDataForToncoin))return!1}else if(!this.providerDataForJettons&&(this.providerDataForJettons=await this.initProviderForJettons(),!this.providerDataForJettons))return!1;return!0},resetState(){this.state.swapId="",this.state.queryId="0",this.state.jettonEvmAddress="",this.state.fromCurrencySent=!1,this.state.toCurrencySent=!1,this.state.step=0,this.state.votes=[],this.state.swapData=null,this.state.burnData=null,this.state.createTime=0,this.state.blockNumber=0,this.isQRCodeShown=!1,this.$emit("reset-state")},async loadState(e){if(!e||!e.processingState)return!1;this.isInitInProgress=!0;const t="ton"===e.token;if(await this.initProvider(t))return this.isInitInProgress=!1,Object.assign(this.state,e.processingState),this.ethToTon=e.processingState.ethToTon,t?await this.updateStateForToncoin():await this.updateStateForJettons(),!0;this.isInitInProgress=!1},saveState(){this.$emit("save-state",{...this.state,ethToTon:this.ethToTon})},deleteState(){this.$emit("delete-state")},async updateStateForToncoin(){const e=this.providerDataForToncoin,t=this.ethereumProvider.web3;if(1===this.state.step&&this.isFromTon){const e=await this.getSwapForToncoin(en(this.amount),this.toAddress,this.state.createTime);e&&(this.state.swapId=this.getSwapTonToEthIdForToncoin(e),this.state.swapData=e,this.state.step=3)}if(2===this.state.step&&!this.isFromTon){const n=await t.eth.getBlockNumber();e.blockNumber=n,Xt.log(n,this.state.blockNumber);const r=(n||this.state.blockNumber)-this.state.blockNumber;if(r>this.params.blocksConfirmations){const e=await t.eth.getTransactionReceipt(this.ethToTon.transactionHash);this.ethToTon.blockNumber=e.blockNumber;const n=await t.eth.getBlock(e.blockNumber);this.ethToTon.blockTime=Number(n.timestamp),this.ethToTon.blockHash=n.hash;const r=Rt.findLog(t,this.ethToTon.from,this.ethToTon.value,this.ethToTon.to.workchain.toString(),this.ethToTon.to.address_hash,e.logs);if(!r)throw new Error("cant find log");this.ethToTon.logIndex=r.logIndex,this.state.queryId=this.getQueryId(this.ethToTon).toString(),this.state.step=3}}3===this.state.step&&(this.state.votes=this.isFromTon?await this.getEthVoteForToncoin(this.state.swapId):await this.getTonVoteForToncoin(this.state.queryId),this.state.votes.length>=2*e.oraclesTotal/3&&(this.state.step=this.isFromTon?4:5))},async updateStateForJettons(){const e=this.providerDataForJettons,t=this.ethereumProvider.web3;if(1===this.state.step&&this.isFromTon){const e=await this.getSwapForJettons(this.toAddress,this.state.createTime);e&&(this.state.swapId=this.getSwapTonToEthIdForJettons(e),this.state.burnData=e,this.state.step=3)}if(2===this.state.step&&!this.isFromTon){const n=await t.eth.getBlockNumber();e.blockNumber=n,Xt.log(n,this.state.blockNumber);const r=(n||this.state.blockNumber)-this.state.blockNumber;if(r>this.params.blocksConfirmations){const e=await t.eth.getTransactionReceipt(this.ethToTon.transactionHash);this.ethToTon.blockNumber=e.blockNumber;const n=await t.eth.getBlock(e.blockNumber);this.ethToTon.blockTime=Number(n.timestamp),this.ethToTon.blockHash=n.hash;const r=Qt.findLog(t,this.ethToTon.from,this.ethToTon.value,this.ethToTon.to.address_hash,this.tokenAddress.toLowerCase(),e.logs);if(!r)throw new Error("cant find log");this.ethToTon.logIndex=r.logIndex,this.state.queryId=this.getQueryId(this.ethToTon).toString(),this.state.step=3}}if(3===this.state.step)if(this.isFromTon)this.state.votes=await this.getEthVoteForJettons(this.state.swapId),this.state.votes.length>=2*e.oraclesTotal/3&&(this.state.step=4);else{const e=await this.isJettonMintPaid(this.state.queryId);Xt.log("isPaid",this.state.queryId,e),e&&(this.state.step=4)}4!==this.state.step||this.isFromTon||(this.state.votes=await this.getTonVoteForJettons(this.state.queryId),this.state.votes.length>=2*e.oraclesTotal/3&&(this.state.step=5))},getSwapTonToEthIdForToncoin(e){const t="eth"!==this.pair||this.isTestnet?this.params.wTonAddress:void 0;return Rt.getDataId(this.ethereumProvider.web3,e,t)},getSwapTonToEthIdForJettons(e){return Qt.getDataId(this.ethereumProvider.web3,e,this.params.tonBridgeV2EVMAddress,this.params.chainId)},getFeeAmountForToncoin(e){const t=this.providerDataForToncoin,n=e.sub(t.feeFlat),r=n.mul(t.feeFactor).div(t.feeBase);return t.feeFlat.add(r)},async getSwapForToncoin(e,t,n){const r=e.sub(this.getFeeAmountForToncoin(e)),s=this.lt&&this.hash,o=this.isRecover,i=this.providerDataForToncoin.tonweb.provider;let a;if(s)Xt.log("Get Toncoin specified tx "+this.lt+":"+this.hash),a=await i.getTransactions(this.params.tonBridgeAddress,1,this.lt,this.hash,void 0,!0);else{const e=o?200:40;Xt.log(`Find Toncoin swap - get ${e} ton txs`),a=await i.getTransactions(this.params.tonBridgeAddress,e)}Xt.log(`Find Toncoin swap - got ton ${a.length} txs`);for(const l of a){if(!o&&!s&&1e3*l.utime<n)continue;const e=Rt.processTonTransaction(l);if(e&&(Xt.log(JSON.stringify(e)),new(X())(e.amount).eq(r)&&e.receiver.toLowerCase()===t.toLowerCase()))return e}return null},async isJettonMintPaid(e){const t=this.providerDataForJettons.tonweb.provider,n=this.isRecover,r=n?200:40;Xt.log(`Find Token paid - get ${r} ton txs`);const s=await t.getTransactions(this.params.tonBridgeAddressV2,r);Xt.log(`Find Token paid - got ${s.length} ton txs`);for(const o of s){const t=Qt.processPayJettonMintTransaction(o);if(t&&t.queryId===e)return Xt.log(t),!0}return!1},async getSwapForJettons(e,t){const n=this.lt&&this.hash,r=this.isRecover,s=this.providerDataForJettons.tonweb.provider;let o;if(n)Xt.log("Get Token specified tx "+this.lt+":"+this.hash),o=await s.getTransactions(this.params.tonBridgeAddressV2,1,this.lt,this.hash,void 0,!0);else{const e=r?200:40;Xt.log(`Find Token swap - get ${e} ton txs`),o=await s.getTransactions(this.params.tonBridgeAddressV2,e)}Xt.log(`Find Token swap - got ton ${o.length} txs`);for(const i of o){if(!r&&!n&&1e3*i.utime<t)continue;const s=Qt.processTonTransaction(i);if(s&&(Xt.log(JSON.stringify(s)),s.ethReceiver.toLowerCase()===e.toLowerCase()&&pt(this.state.jettonEvmAddress.toLowerCase())===pt(s.token.toLowerCase())))return s}return null},async getEthVoteForToncoin(e){const t=await bt(this.providerDataForToncoin.tonweb,this.params.tonCollectorAddress,e);return t?t.signatures:[]},async getEthVoteForJettons(e){const t=await bt(this.providerDataForJettons.tonweb,this.params.tonCollectorAddressV2,e);return t?t.signatures:[]},async getTonVoteForToncoin(e){return Kt(this.providerDataForToncoin.tonweb,this.params.tonMultisigAddress,e,this.providerDataForToncoin.oraclesTotal)},async getTonVoteForJettons(e){return Kt(this.providerDataForJettons.tonweb,this.params.tonMultisigAddressV2,e,this.providerDataForJettons.oraclesTotal)},onDoneClick(){this.deleteState(),this.resetState()},onCancelClick(){this.deleteState(),this.resetState()},async validateEthereumProvider(){try{if(!this.ethereumProvider.isConnected){const e=this.$t("errors.providerIsDisconnected",{provider:this.ethereumProvider.title});throw new Error(e)}if(!this.ethereumProvider.myAddress)throw new Error(this.$t("errors.cantGetAddress"));const e=()=>{const e=this.$t("errors.wrongProviderNetwork",{network:this.$t(`networks.${this.pair}.${this.netTypeName}.name`),provider:this.ethereumProvider.title});throw new Error(e)};if("walletConnect"===this.ethereumProvider.name){const t=await this.ethereumProvider.switchChain(this.params.chainId);t||e()}else this.ethereumProvider.chainId!==this.params.chainId&&e();if(!new(X())(await this.ethereumProvider.web3.eth.getBalance(this.ethereumProvider.myAddress)).gt(new(X())("0")))throw new Error(this.$t(`networks.${this.pair}.errors.lowBalance`))}catch(e){return Xt.error(e.message),this.setAlert({title:this.$t("errors.alertTitleError"),message:e.message,buttonLabel:this.$t("errors.alertButtonClose")}),!1}return!0},async debugVoteForSwitchLock(){const e=[{signer:"0xe54CD631C97bE0767172AD16904688962d09d2FE",signature:"0x53d5ede513368f6b01d88520b51cabdbd07a23d8b91614a211962c68165ef7b4726ea200897d8db55861c1e8862289321fc13579027c773572d6248deab761911c"},{signer:"0xeb05E1B6AC0d574eF2CF29FDf01cC0bA3D8F9Bf1",signature:"0xc931c3b089eece0b4cc150d387d4d1fbf65d75eff2e409b8b99738cc08cfe3573b6f16ee6c206ee968b5216dae04526c1a79d83ec025a0b93c733ecbc9f881371b"}].sort(((e,t)=>Re(e.signer).cmp(Re(t.signer))));await this.providerDataForJettons.bridgeContract.methods.voteForSwitchLock(!0,1,e).send({from:this.ethereumProvider.myAddress})},async mintWrappedToncoin(){if(this.isMintingInProgress)return;if(!await this.validateEthereumProvider())return;let e;this.isMintingInProgress=!0;try{const t=Tt(this.state.votes),n=this.state.swapData;if(!n)throw new Error("No swap data");const r=Rt.getDataId(this.ethereumProvider.web3,n,1===this.params.chainId?void 0:this.params.wTonAddress);Xt.log({swapId:r}),await Ut(this.providerDataForToncoin.wtonContract,r);const s=this.providerDataForToncoin.wtonContract.methods.voteForMinting(n,t);e=await s.send({from:this.ethereumProvider.myAddress}).on("transactionHash",(()=>{this.state.toCurrencySent=!0,this.isMintingInProgress=!1,this.deleteState()}))}catch(t){return Xt.error(t),void(this.isMintingInProgress=!1)}this.isMintingInProgress=!1,e.status?(this.state.step=5,this.deleteState()):Xt.error("transaction fail",e)},async burnWrappedToncoin(){if(this.isBurningInProgress)return;if(!await this.validateEthereumProvider())return;const e=this.ethereumProvider.myAddress,t=this.toAddress;let n,r,s,o;this.isBurningInProgress=!0;try{const i=new(ne().utils.Address)(t);r=i.wc,s=We(i.hashPart),n=en(this.amount).toString(),o=await this.providerDataForToncoin.wtonContract.methods.burn(n,{workchain:r,address_hash:"0x"+s}).send({from:e}).on("transactionHash",(()=>{this.state.fromCurrencySent=!0}))}catch(i){return this.isBurningInProgress=!1,Xt.error(i),void this.resetState()}o.status?(Xt.log("receipt",o),this.state.blockNumber=o.blockNumber,this.ethToTon={type:"SwapEthToTon",transactionHash:o.transactionHash,logIndex:-1,blockNumber:o.blockNumber,blockTime:0,blockHash:"",from:e,to:{workchain:r,address_hash:s},value:n,rawData:o.rawData,topics:o.topics,transactionIndex:o.transactionIndex},this.isBurningInProgress=!1,this.state.step=2):(this.isBurningInProgress=!1,Xt.error("transaction fail",o))},async checkAllowance(){if(Xt.log("checkAllowance "+this.tokenAddress),this.isFromTon||this.isToncoinTransfer||!this.isInputsValid||!this.ethereumProvider||!oe().utils.isAddress(this.tokenAddress)||!this.amount)return Xt.log("checkAllowance invalid values"),this.hasApprove=!1,void(this.isGetAllowanceError=!0);if(!this.isFromTon&&this.evmHash)return this.hasApprove=!0,this.isGetAllowanceInProcess=!1,void(this.isGetAllowanceError=!1);const e=this.amount,t=this.tokenAddress,n=this.ethereumProvider.myAddress;try{this.isGetAllowanceInProcess=!0;const r=new It(this.ethereumProvider),s=await r.decimals({address:t}),o=(0,xe.vz)(e,s).toString(),i=await r.allowance({address:t,spender:this.params.tonBridgeV2EVMAddress,owner:n});this.tokenAddress==t&&this.amount===e&&this.ethereumProvider?.myAddress===n&&(Xt.log(i.toString()),Xt.log(o.toString()),this.hasApprove=new(X())(i.toString()).gte(new(X())(o)),this.isGetAllowanceInProcess=!1,this.isGetAllowanceError=!1)}catch(r){Xt.error(r),this.hasApprove=!1,this.isGetAllowanceInProcess=!1,this.isGetAllowanceError=!0}},async onApproveClick(){if(this.isApprovingInProgress)return;if(!this.isInputsValid)return;if(!await this.validateEthereumProvider())return;if(this.tokenAddress.toLowerCase()===_t)return void this.$emit("error",{input:"amount",message:"jUSDT can only be sent from TON network"});this.isApprovingInProgress=!0;const e=_e.PS.toString();try{const t=new It(this.ethereumProvider),n=await t.approve({address:this.tokenAddress,spender:this.params.tonBridgeV2EVMAddress,amount:e});await n.wait(),this.hasApprove=!0,this.isApprovingInProgress=!1}catch(t){Xt.error(t),this.isApprovingInProgress=!1,this.setAlert({title:this.$t("errors.alertTitleError"),message:t.message,buttonLabel:this.$t("errors.alertButtonClose")})}},async recoverEvmToTonTransfer(){if(!await this.validateEthereumProvider())return;const e=new It(this.ethereumProvider),t=await e.decimals({address:this.tokenAddress}),n=new(X())((0,xe.vz)(this.amount,t).toString()),r=this.ethereumProvider.myAddress,s=this.toAddress,o=new(ne().utils.Address)(s),i=o.wc;if(0!==i)throw new Error("Only basechain wallets supported");const a=We(o.hashPart),l=this.ethereumProvider.web3,d=await l.eth.getTransactionReceipt(this.evmHash);d.status&&(Xt.log("receipt",d),this.state.createTime=Date.now(),this.state.fromCurrencySent=!0,this.state.blockNumber=d.blockNumber,this.ethToTon={type:"SwapEthToTon",transactionHash:d.transactionHash,logIndex:-1,blockNumber:d.blockNumber,blockTime:0,blockHash:"",from:r,to:{workchain:i,address_hash:a},value:n.toString(),rawData:d.rawData,topics:d.topics,transactionIndex:d.transactionIndex},this.state.step=2,this.saveState())},async lockToken(e){if(this.isBurningInProgress)return;if(!await this.validateEthereumProvider())return;const t=this.ethereumProvider.myAddress,n=this.toAddress;let r,s,o;this.isBurningInProgress=!0;try{const i=new(ne().utils.Address)(n);if(r=i.wc,0!==r)throw new Error("Only basechain wallets supported");s=We(i.hashPart),o=await this.providerDataForJettons.bridgeContract.methods.lock(this.tokenAddress,e.toString(),"0x"+s).send({from:t}).on("transactionHash",(()=>{this.state.fromCurrencySent=!0}))}catch(i){return this.isBurningInProgress=!1,Xt.error(i),void this.resetState()}o.status?(Xt.log("receipt",o),this.state.blockNumber=o.blockNumber,this.ethToTon={type:"SwapEthToTon",transactionHash:o.transactionHash,logIndex:-1,blockNumber:o.blockNumber,blockTime:0,blockHash:"",from:t,to:{workchain:r,address_hash:s},value:e.toString(),rawData:o.rawData,topics:o.topics,transactionIndex:o.transactionIndex},this.isBurningInProgress=!1,this.state.step=2,this.saveState()):(this.isBurningInProgress=!1,Xt.error("transaction fail",o))},async unlockToken(){if(this.isMintingInProgress)return;if(!await this.validateEthereumProvider())return;let e;this.isMintingInProgress=!0;try{const t=Tt(this.state.votes),n=this.state.burnData;if(!n)throw new Error("No burn data");const r=Qt.getDataId(this.ethereumProvider.web3,n,this.params.tonBridgeV2EVMAddress,this.params.chainId);Xt.log({swapId:r}),await Ut(this.providerDataForJettons.bridgeContract,r);const s={receiver:n.ethReceiver,token:n.token,amount:n.jettonAmount,tx:{address_hash:n.tx.address_.address_hash,tx_hash:n.tx.tx_hash,lt:n.tx.lt}},o=this.providerDataForJettons.bridgeContract.methods.unlock(s,t);e=await o.send({from:this.ethereumProvider.myAddress}).on("transactionHash",(()=>{this.state.toCurrencySent=!0,this.isMintingInProgress=!1,this.deleteState()}))}catch(t){return Xt.error(t),void(this.isMintingInProgress=!1)}this.isMintingInProgress=!1,e.status?(this.state.step=5,this.deleteState()):Xt.error("transaction fail",e)},async mintJetton(){if(!this.isBurningInProgress&&this.providerDataForJettons){this.isBurningInProgress=!0;try{await st({tonConnect:this.providerDataForJettons.tonConnect,queryId:this.state.queryId,bridgeTonAddress:this.params.tonBridgeAddressV2}),this.isBurningInProgress=!1}catch(e){this.isBurningInProgress=!1,Xt.error(e)}}},async burnJetton(e,t){if(!this.isBurningInProgress&&this.providerDataForJettons){this.isBurningInProgress=!0;try{const n=this.toAddress;if(!n||!oe().utils.isAddress(n))throw new Error("invalid to address");const r=Re(n);await rt({tonConnect:this.providerDataForJettons.tonConnect,destinationAddress:r,userTonAddress:this.providerDataForJettons.myAddreess,jettonWalletAddress:t,jettonAmountWithDecimals:e}),this.isBurningInProgress=!1,this.saveState()}catch(n){this.isBurningInProgress=!1,Xt.error(n),this.resetState()}}},async initProviderForToncoin(){if(!await this.validateEthereumProvider())return null;const e=new this.ethereumProvider.web3.eth.Contract(Oe,this.params.wTonAddress),t=(await e.methods.getFullOracleSet().call()).length;if(!(t>0))return null;const n=new(ne())(new(ne().HttpProvider)(this.params.tonCenterUrl,{apiKey:this.params.tonCenterApiKey})),r=(await n.provider.call(this.params.tonBridgeAddress,"get_bridge_data",[])).stack;if(8!==r.length)return Xt.error("Invalid bridge data",r),null;const s=Re(r[4][1]),o=Re(r[5][1]),i=Re(r[6][1]),a=Re(r[7][1]),l={blockNumber:0,wtonContract:e,tonweb:n,oraclesTotal:t,feeFlat:s.add(o),feeFactor:i,feeBase:a};return l},async initProviderForJettons(){if(!await this.validateEthereumProvider())return null;const e=this.tonConnect.account;if(!this.tonConnect.connected||!e)return this.setAlert({title:this.$t("errors.alertTitleError"),message:"Please connect TON Wallet"}),null;const t=e.address;Xt.log("wallet",t);const n=new(ne().Address)(t);if(0!==n.wc)return void this.setAlert({title:this.$t("errors.alertTitleError"),message:"Only basechain wallets supported",buttonLabel:this.$t("errors.alertButtonClose")});const r=new this.ethereumProvider.web3.eth.Contract(De.Mt,this.params.tonBridgeV2EVMAddress),s=(await r.methods.getFullOracleSet().call()).length;if(!(s>0))return null;const o=new(ne())(new(ne().HttpProvider)(this.params.tonCenterUrl,{apiKey:this.params.tonCenterApiKey})),i=await o.provider.getBalance(t);if(Xt.log("userTonBalance",i.toString()),new(X())(i).lt(en("1")))return void this.setAlert({title:this.$t("errors.alertTitleError"),message:"You need at least 1 TON on wallet balance",buttonLabel:this.$t("errors.alertButtonClose")});const a={blockNumber:0,bridgeContract:r,tonweb:o,oraclesTotal:s,myAddress:t,tonConnect:this.tonConnect};return a},async onTransferClick(){if(this.isInitInProgress)return;if(!this.isInputsValid)return;if(this.isFromTon&&this.isToncoinTransfer)return void this.$emit("error",{input:"amount",message:"Toncoin transfers from the TON network are no longer supported."});if(!this.isFromTon&&this.tokenAddress.toLowerCase()===_t)return void this.$emit("error",{input:"amount",message:"jUSDT can only be sent from TON network"});if(this.isInitInProgress=!0,!await this.initProvider(this.isToncoinTransfer))return void(this.isInitInProgress=!1);const e=this.isRecover&&!this.isToncoinTransfer&&!this.isFromTon&&this.evmHash,t=this.isRecover&&!this.isToncoinTransfer&&this.isFromTon&&this.lt&&this.hash;if(e)return this.isInitInProgress=!1,void await this.recoverEvmToTonTransfer();if(this.isToncoinTransfer){if(!this.isFromTon)try{const e=new(X())(await this.providerDataForToncoin.wtonContract.methods.balanceOf(this.ethereumProvider.myAddress).call());if(en(this.amount).gt(e))return this.$emit("error",{input:"amount",message:this.$t("errors.toncoinBalance",{coin:"TONCOIN",balance:Yt(e).toString()})}),void(this.isInitInProgress=!1)}catch(n){return Xt.error(n),void(this.isInitInProgress=!1)}this.isInitInProgress=!1,this.state.createTime=Date.now(),this.state.step=1,this.isFromTon?this.saveState():await this.burnWrappedToncoin()}else{let e,r;if(this.isFromTon){let s,o;try{const e=await et(this.providerDataForJettons.tonweb,this.tokenAddress),t=e.chainId;if(t!==this.ethereumProvider.chainId)throw new Error("Jetton from different chain");o=e.decimals,s=e.tokenAddress;const n=Qt.createWrappedTokenData(t,s,o),r=await nt(this.providerDataForJettons.tonweb,this.params.tonBridgeAddressV2,n);if(r.toString(!1)!==new(ne().Address)(this.tokenAddress).toString(!1))throw new Error("Jetton does not belong to this bridge")}catch(n){return Xt.error(n),void(this.isInitInProgress=!1)}try{r=await tt({tonweb:this.providerDataForJettons.tonweb,userTonAddress:new(ne().Address)(this.providerDataForJettons.myAddress),tokenAddress:this.tokenAddress}),this.state.jettonEvmAddress=s,Xt.log("myAddress",this.providerDataForJettons.myAddress.toString()),Xt.log("decimals",o.toString()),Xt.log("jettonEvmAddress",s.toString()),Xt.log("jettonWalletAddress",r.toString(!0,!0,!0));const n=await Ye(this.providerDataForJettons.tonweb,r.toString(!0,!0,!0));if(Xt.log("balance",n.toString()),e=new(X())((0,xe.vz)(this.amount,o).toString()),!t&&!n.gte(e))return this.$emit("error",{input:"amount",message:this.$t("errors.toncoinBalance",{coin:this.tokenSymbol,balance:(0,xe.bM)(n.toString(),o)})}),void(this.isInitInProgress=!1)}catch(n){return Xt.error(n),void(this.isInitInProgress=!1)}}else try{const t=new It(this.ethereumProvider),n=await t.decimals({address:this.tokenAddress});e=new(X())((0,xe.vz)(this.amount,n).toString());const r=new(X())((await t.balanceOf({address:this.tokenAddress,account:this.ethereumProvider.myAddress})).toString());if(!r.gte(e))return this.$emit("error",{input:"amount",message:this.$t("errors.toncoinBalance",{coin:this.tokenSymbol,balance:(0,xe.bM)(r.toString(),n)})}),void(this.isInitInProgress=!1)}catch(n){return Xt.error(n),void(this.isInitInProgress=!1)}this.isInitInProgress=!1,this.state.createTime=Date.now(),this.state.step=1,this.isFromTon?t||await this.burnJetton(e,r):await this.lockToken(e)}}}});const nn=(0,w.Z)(tn,[["render",ze],["__scopeId","data-v-3b9dd568"]]);var rn=nn;const sn=["disabled","readonly","type","id","inputmode"],on={class:"CustomInput-labelWrapper"},an=["for"],ln={key:0,class:"CustomInput-arrow"},dn={key:1,class:"CustomInput-dropdown"},cn=["onMousedown"];function un(e,t,n,s,i,a){return(0,o.wg)(),(0,o.iD)("div",{class:(0,u.C_)(["CustomInput",{hasData:e.hasData,disabled:e.disabled,error:!!e.error&&e.hasData,isDropdownOpened:e.isDropdownOpened}])},[(0,o.wy)((0,o._)("input",{disabled:e.disabled,readonly:e.hasDropdown,type:e.type,id:"CustomInput-"+e.$uuid.v1(),inputmode:"number"===e.type?"decimal":"text",onInput:t[0]||(t[0]=t=>e.$emit("changed")),onClick:t[1]||(t[1]=t=>e.isDropdownOpened=!0),onFocus:t[2]||(t[2]=t=>e.isDropdownOpened=!0),onBlur:t[3]||(t[3]=t=>e.$emit("blur")),onFocusout:t[4]||(t[4]=(...t)=>e.onInputFocusOut&&e.onInputFocusOut(...t)),"onUpdate:modelValue":t[5]||(t[5]=t=>e.model=t)},null,40,sn),[[r.YZ,e.model]]),(0,o._)("div",on,[(0,o._)("label",{for:"CustomInput-"+e.$uuid.v1()},(0,u.zw)(e.hasData&&e.error||e.label),9,an)]),e.hasDropdown?((0,o.wg)(),(0,o.iD)("div",ln)):(0,o.kq)("",!0),e.hasDropdown?((0,o.wg)(),(0,o.iD)("ul",dn,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.dropdown,((t,n)=>((0,o.wg)(),(0,o.iD)("li",{key:n},[(0,o._)("button",{onMousedown:n=>e.onOptionClick(t.value)},(0,u.zw)(t.label),41,cn)])))),128))])):(0,o.kq)("",!0)],2)}var hn=(0,o.aZ)({props:{disabled:{type:Boolean,default:!1},error:{type:String,default:""},label:{type:String,required:!0},type:{type:String,required:!0},modelValue:{type:String,required:!0},dropdown:{type:Array,default:()=>[]}},data(){return{isDropdownOpened:!1}},computed:{hasData(){return!!this.modelValue},model:{get(){if(this.hasDropdown){const e=this.dropdown.find((e=>e.value===this.modelValue));return e?.label||""}return this.modelValue},set(e){this.$emit("update:modelValue",e)}},hasDropdown(){return!!this.dropdown?.length}},methods:{onOptionClick(e){this.model=e,this.isDropdownOpened=!1},onInputFocusOut(e){if(!this.hasDropdown)return;let t=e.relatedTarget;for(;t&&t!==document;t=t.parentNode)if(t===this.$el)return;this.isDropdownOpened=!1}}});const pn=(0,w.Z)(hn,[["render",un],["__scopeId","data-v-10498dc8"]]);var mn=pn;const yn={class:"Footer"},gn=["href"],wn={href:"https://t.me/ton_help_bot",target:"_blank"};function bn(e,t,n,r,s,i){return(0,o.wg)(),(0,o.iD)("footer",yn,[(0,o.Uk)(" v3.0.24, "),(0,o._)("a",{href:e.instructionLink,target:"_blank"},(0,u.zw)(e.$t("instruction")),9,gn),(0,o.Uk)(", "),(0,o._)("a",wn,(0,u.zw)(e.$t("support")),1),(0,o.Uk)(" . ")])}var Tn=(0,o.aZ)({name:"Footer",computed:{instructionLink(){return"Инструкция"===this.$t("instruction")?"https://tonblockchain.ru/chto-takoie-mosty-v-blokchieinie-i-kak-oni-rabotaiut/":"https://blog.ton.org/ton-erc-20-bridge-tutorial"}}});const fn=(0,w.Z)(Tn,[["render",bn],["__scopeId","data-v-67c0abef"]]);var vn=fn;const kn=e=>((0,o.dD)("data-v-6f07bf14"),e=e(),(0,o.Cn)(),e),Cn={key:0,class:"Header-testnet"},Sn={href:"https://ton.org/bridges",target:"_blank"},An={key:1,class:"Header-testnet"},In={class:"Header-wrapper"},Pn=kn((()=>(0,o._)("span",{class:"Header-logoIcon"},null,-1))),Bn={class:"Header-logoLabel"},zn={class:"Header-menu"},_n={key:1,class:"Header-menuWrapper"},xn=["data-icon"],En={class:"Header-menuList"},Fn={"data-id":"address"},Nn={"data-id":"disconnect"},Dn=["disabled"];function On(e,t,n,r,s,i){return(0,o.wg)(),(0,o.iD)("header",{class:(0,u.C_)(["Header",{isScrolled:e.isScrolled}])},[e.isTestnet?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("div",Cn,[(0,o.Uk)((0,u.zw)(e.$t("deprecated"))+" — ",1),(0,o._)("a",Sn,(0,u.zw)(e.$t("read_more")),1),(0,o.Uk)(". ")])),e.isTestnet?((0,o.wg)(),(0,o.iD)("div",An,(0,u.zw)(e.$t("testnetMessage")),1)):(0,o.kq)("",!0),(0,o._)("div",In,[((0,o.wg)(),(0,o.j4)((0,o.LL)(e.isHistoryShown?"NuxtLink":"div"),{to:e.parentUrl,class:(0,u.C_)(["Header-logo",{isHistoryShown:e.isHistoryShown}])},{default:(0,o.w5)((()=>[Pn,(0,o._)("span",Bn,(0,u.zw)(e.$t("logoLabel")),1)])),_:1},8,["to","class"])),(0,o._)("div",zn,[e.showMenu?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("div",{key:0,onClick:t[0]||(t[0]=(...t)=>e.onConnectEthereumWalletClick&&e.onConnectEthereumWalletClick(...t)),class:"Header-connectEthereumButton"}," Connect Ethereum ")),e.showMenu?((0,o.wg)(),(0,o.iD)("div",_n,[(0,o._)("div",{class:"Header-menuAddress","data-icon":e.ethereumProvider?.name},[(0,o._)("span",null,(0,u.zw)(e.address),1)],8,xn),(0,o._)("ul",En,[(0,o._)("li",Fn,[(0,o._)("span",null,(0,u.zw)(e.address),1)]),(0,o._)("li",Nn,[(0,o._)("button",{onClick:t[1]||(t[1]=(...t)=>e.onDisconnectClick&&e.onDisconnectClick(...t)),disabled:e.disableDisconnect},(0,u.zw)(e.$t("disconnectWallet")),9,Dn)])])])):(0,o.kq)("",!0)])])],2)}var $n=(0,o.aZ)({name:"Header",props:{isTestnet:{type:Boolean,default:!1},showMenu:{type:Boolean,required:!0},ethereumProvider:{type:Object,required:!0},disableDisconnect:{type:Boolean,default:!1},isHistoryShown:{type:Boolean,default:!1}},data(){return{isScrolled:window.pageYOffset>0}},computed:{address(){return this.ethereumProvider?this.ethereumProvider.myAddress.slice(0,6)+"…"+this.ethereumProvider.myAddress.slice(-4):""},parentUrl(){const{historyAddress:e,historyNetwork:t,...n}=this.$route.query;return this.generateUrlWithQuery(n)},historyUrl(){if(!this.ethereumProvider||!this.ethereumProvider.myAddress)return"";let e="";Object.keys(it.zK.networks).forEach((t=>{const n=it.zK.networks[t];Object.keys(n).forEach((r=>{const s=n[r];s.chainId===this.ethereumProvider?.chainId&&(e=t)}))}));const t={...this.$route.query,historyAddress:this.ethereumProvider.myAddress,historyNetwork:e};return this.generateUrlWithQuery(t)}},created(){window.addEventListener("scroll",this.onScroll)},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)},methods:{generateUrlWithQuery(e){const t=Object.keys(e).map((t=>t+"="+encodeURIComponent(e[t])));return this.$router.resolve("/"+(t?"?"+t.join("&"):"")).href.replace("bridge","")},onScroll(){this.isScrolled=window.pageYOffset>0},onConnectEthereumWalletClick(){this.$emit("connect-ethereum-wallet-click")},close(){this.$emit("close")},onDisconnectClick(){this.ethereumProvider?.disconnect()}}});const Ln=(0,w.Z)($n,[["render",On],["__scopeId","data-v-6f07bf14"]]);var Mn=Ln;const Wn=e=>((0,o.dD)("data-v-6eafede0"),e=e(),(0,o.Cn)(),e),Un={class:"WalletsPopup-panel"},Hn=["onClick"],Vn=["data-icon","disabled"],qn=Wn((()=>(0,o._)("em",null,null,-1)));function Rn(e,t,n,s,i,a){return(0,o.wg)(),(0,o.j4)(r.uT,{name:"WalletsPopupTransition",appear:""},{default:(0,o.w5)((()=>[(0,o._)("aside",{class:(0,u.C_)(["WalletsPopup",{isLoading:e.isLoading}])},[(0,o._)("div",{class:"WalletsPopup-overlay",onClick:t[0]||(t[0]=(...t)=>e.close&&e.close(...t))}),(0,o._)("div",Un,[(0,o._)("ul",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.providersList,(t=>((0,o.wg)(),(0,o.iD)("li",{key:t,onClick:n=>e.onProviderClick(t)},[(0,o._)("button",{"data-icon":t,disabled:e.isLoading,class:(0,u.C_)({showLoader:e.isLoading&&e.loadingProviderName===t})},[(0,o.Uk)((0,u.zw)(e.$t(`providers.${t}`)),1),qn],10,Vn)],8,Hn)))),128))]),e.uncancellable?(0,o.kq)("",!0):((0,o.wg)(),(0,o.iD)("button",{key:0,class:"WalletsPopup-panelClose",onClick:t[1]||(t[1]=(...t)=>e.close&&e.close(...t))}))])],2)])),_:1})}var Jn=n(5941);const jn={metamask:"Metamask",walletConnect:"WalletConnect"};var Gn=(0,o.aZ)({props:{params:{type:Object,required:!0},uncancellable:{type:Boolean,default:!1}},data(){return{isLoading:!1,loadingProviderName:""}},computed:{providersList(){return Object.keys(jn)}},created(){document.addEventListener("keydown",this.onKeyDown)},beforeDestroy(){document.removeEventListener("keydown",this.onKeyDown)},methods:{onKeyDown(e){27===e.keyCode&&this.close()},close(){this.uncancellable||this.isLoading||this.$emit("cancel")},async onProviderClick(e){if(this.isLoading)return;this.isLoading=!0,this.loadingProviderName=e;const t=jn[e],r=await n(8988)(`./${e}/index`);try{const e=new r[t],n=await e.connect(this.params);if(this.isLoading=!1,!n)return;this.$emit("wallet-connected",e)}catch(s){const e=this.$t(s.message)?this.$t(s.message):s.message;Jn.error(e),alert(e),this.isLoading=!1}}}});const Qn=(0,w.Z)(Gn,[["render",Rn],["__scopeId","data-v-6eafede0"]]);var Zn=Qn,Kn=n(7688),Xn=n(7702),Yn=n(5941);const er=["eth","bsc"],tr=ne().utils.fromNano,nr=ne().utils.toNano;var rr=(0,o.aZ)({name:"Bridge",components:{BridgeProcessor:rn,WalletsPopup:Zn,CustomInput:mn,Header:Mn,Footer:vn},head(){return{title:this.$t(`networks.${this.pair}.pageTitle`)}},data(){return{getPairGasFee__debounced:()=>{},gasPrice:0,isTestnet:!1,isRecover:!1,lt:0,hash:"",evmHash:"",isFromTon:!1,pair:"eth",token:"ton",amountInput:"",toAddress:"",tokenAddress:"",tokenSymbol:"TON",walletsPopupState:"closed",ethereumProvider:null,tonConnect:null,isEthereumWalletConnected:!1,bridgeProcessorIsLoading:!1,isTransferInProgress:!1,errors:{amount:"",toAddress:"",tokenAddress:""}}},computed:{isToncoinTransfer(){return"ton"===this.token},isInputsValid(){return!this.errors.amount&&!this.errors.toAddress&&(this.isToncoinTransfer||!this.errors.tokenAddress)},getTokenAddress(){return"otherTokens"===this.token?this.tokenAddress:(0,it.Po)(this.token,this.isFromTon,this.isTestnet,this.pair)},netTypeName(){return this.isTestnet?"test":"main"},params(){const e=it.zK.networks[this.pair];return e[this.netTypeName]},pairNetworkCoinUrl(){const e=this.params.explorerUrl,t=this.params.wTonAddress;return e.replace("<ADDRESS>",t)},willReceive(){if(this.bridgeFeeAmount.isZero())return"";if(this.isToncoinTransfer){const e=this.$t(`networks.${this.isFromTon?this.pair:"ton"}.${this.netTypeName}.coin`);return this.$t("willReceive",{coin:e,fee:tr(nr(this.amountInput).sub(this.bridgeFeeAmount))})}return""},pairFee(){const e=this.gasPrice?this.gasPrice/this.params.defaultGwei:1,t=this.isFromTon?this.params.toncoinTransferFrom_gasPrice*e:this.params.toncoinTransferTo_gasPrice*e,n=this.isFromTon?this.params.tokenTransferFrom_gasPrice*e:this.params.tokenTransferTo_gasPrice*e,r=this.isToncoinTransfer?t:n;return this.$t(`networks.${this.pair}.gasFee`,{fee:r.toFixed(4)})},bridgeFeeAmount(){if(this.isToncoinTransfer){let t;try{t=nr(this.amountInput)}catch(e){}if(void 0===t)return new(X())(0);if(t.lt(it.p9))return new(X())(0);{const e=nr("5"),n=qe("25"),r=qe("10000"),s=t.sub(e),o=s.mul(n).div(r);return e.add(o)}}return nr("1")},bridgeFee(){return"ton"===this.token?this.bridgeFeeAmount.isZero()?this.$t("bridgeFeeBelow10"):this.$t("bridgeFeeAbove10",{fee:tr(this.bridgeFeeAmount)}):this.isFromTon&&"usdt"!==this.token&&this.tokenAddress?.toLowerCase()!==_t?this.$t("tokenBridgeFeeToEvm"):this.$t("tokenBridgeFee")},fromPairs(){return["ton",...er]},toPairs(){return[this.pair,...er.filter((e=>e!==this.pair)),"ton"]},isPairsBlocked(){return this.isTransferInProgress},isInputsBlocked(){return this.isTransferInProgress}},watch:{isFromTon(e,t){this.getPairGasFee__debounced(),e!==t&&this.checkInputs()},async pair(e,t){"bsc"===e&&(this.token="ton"),this.getPairGasFee__debounced(),e!==t&&this.checkInputs()}},created(){if(this.getPairGasFee__debounced=ee()(this.getPairGasFee,100),this.$route.query.testnet&&(this.isTestnet="true"===this.$route.query.testnet.toString().toLowerCase()),this.$route.query.recover||this.$route.query.recovery){const e="true"===(this.$route.query.recover?.toString()||"").toLowerCase(),t="true"===(this.$route.query.recovery?.toString()||"").toLowerCase();this.isRecover=e||t}if(this.$route.query.lt){const e=parseInt(this.$route.query.lt.toString(),10);this.lt=!e||isNaN(e)?0:e}if(this.$route.query.hash&&(this.hash=this.$route.query.hash.toString()),this.$route.query.evmHash&&(this.evmHash=this.$route.query.evmHash.toString()),this.$route.query.amount)try{this.amountInput=this.$route.query.amount.toString()}catch(e){this.amountInput=""}if(this.$route.query.toAddress&&(this.toAddress=this.$route.query.toAddress.toString()),this.$route.query.fromNetwork&&this.$route.query.toNetwork){const e=this.$route.query.fromNetwork.toString().toLowerCase(),t=this.$route.query.toNetwork.toString().toLowerCase();"ton"===e&&er.includes(t)&&(this.isFromTon=!0,this.pair=t),"ton"===t&&er.includes(e)&&(this.isFromTon=!1,this.pair=e)}if(this.$route.query.token){const e=this.$route.query.token.toString(),t=e.toLowerCase();"ton"===t||"usdt"===t||"usdc"===t||"dai"===t||"wbtc"===t?(this.token=t,this.tokenAddress=(0,it.Po)(this.token,this.isFromTon,this.isTestnet,this.pair),this.tokenSymbol=t.toUpperCase()):(this.token="otherTokens",this.tokenAddress=e,this.tokenSymbol="")}document.getElementById("tonConnectButton").style.visibility="ton"===this.token?"hidden":"visible",this.tonConnect=(0,re.Xl)(new Xn.HF({manifestUrl:"https://bridge-v3.ton.org/tonconnect-manifest.json",buttonRootId:"tonConnectButton"})),this.tonConnect.uiOptions={uiPreferences:{theme:Xn.C6.LIGHT}};this.tonConnect.onStatusChange((e=>{null===e||e.account}))},mounted(){this.getPairGasFee__debounced(),this.loadStateBridge(),this.checkInputs(),this.$watch((()=>this.tokenAddress+"_"+this.token+"_"+this.isFromTon),(()=>{document.getElementById("tonConnectButton").style.visibility="ton"===this.token?"hidden":"visible","otherTokens"===this.token?this.tokenSymbol="":this.tokenSymbol=this.token.toUpperCase()}))},methods:{checkInputs(){this.errors.tokenAddress="",this.errors.amount="",this.errors.toAddress="";const e=this.getTokenAddress;if(this.isFromTon?ne().utils.Address.isValid(e)||(this.errors.tokenAddress=this.$t("networks.ton.errors.invalidAddress")):(oe().utils.isAddress(e)||(this.errors.tokenAddress=this.$t(`networks.${this.pair}.errors.invalidAddress`)),e.toLowerCase()===this.params.wTonAddress.toLowerCase()&&(this.errors.tokenAddress=this.$t(`networks.${this.pair}.errors.invalidAddress`))),this.tokenAddress.toLowerCase()==="0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2".toLowerCase()&&(this.errors.tokenAddress="WETH not supported"),this.tokenAddress.toLowerCase()==="0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1".toLowerCase()&&(this.errors.tokenAddress="Use Toncoin transfer"),"ton"===this.token){let e;try{e=nr(this.amountInput)}catch(t){this.errors.amount=this.$t("errors.notValidAmount")}void 0!==e&&e.lt(it.p9)&&(this.errors.amount=this.$t("errors.amountBelow10"))}else{let e;try{if(this.amountInput.trim().startsWith("0x"))throw new Error;if(e=Number(this.amountInput),isNaN(e))throw new Error}catch(t){this.errors.amount=this.$t("errors.notValidAmount")}void 0!==e&&e<=0&&(this.errors.amount=this.$t("errors.notValidAmount"))}this.isFromTon?oe().utils.isAddress(this.toAddress)||(this.errors.toAddress=this.$t(`networks.${this.pair}.errors.invalidAddress`)):ne().utils.Address.isValid(this.toAddress)||(this.errors.toAddress=this.$t("networks.ton.errors.invalidAddress")),(this.toAddress.toLowerCase()===this.params.wTonAddress.toLowerCase()||this.toAddress.toLowerCase()===this.params.tonBridgeAddress.toLowerCase()||this.toAddress.toLowerCase()===this.params.tonBridgeV2EVMAddress.toLowerCase()||this.toAddress.toLowerCase()===this.params.tonBridgeAddressV2.toLowerCase()||this.tokenAddress&&this.toAddress.toLowerCase()===this.tokenAddress.toLowerCase())&&(this.errors.toAddress=this.$t("errors.needPersonalAddress"))},onPairClick(e,t){this.isPairsBlocked||(e&&(this.isFromTon=!this.isFromTon),this.pair=t)},toggleFromTon(){this.isPairsBlocked||(this.isFromTon=!this.isFromTon)},resetState(){this.isRecover=!1,this.lt=0,this.hash="",this.evmHash="",this.tokenAddress="",this.amountInput="",this.toAddress=""},loadStateBridge(){if(!(0,Kn.y1)())return;const e=localStorage.getItem("bridgeState");if(e){let n;try{n=JSON.parse(e)}catch(t){return}this.amountInput=n.amount,this.toAddress=n.toAddress,this.pair=n.pair,this.isFromTon=n.isFromTon,this.token=n.token,this.tokenAddress=n.tokenAddress,this.isTransferInProgress=!0}},loadStateProcessor(){if(!(0,Kn.y1)())return;const e=localStorage.getItem("bridgeState");if(e){let n;try{n=JSON.parse(e)}catch(t){return}Yn.log("loadState"),this.$refs.bridgeProcessor.loadState(n)}},saveState(e){if(!(0,Kn.y1)())return;const t={amount:this.amountInput,toAddress:this.toAddress,pair:this.pair,isFromTon:this.isFromTon,token:this.token,tokenAddress:this.tokenAddress,processingState:e};localStorage.setItem("bridgeState",JSON.stringify(t))},deleteState(){(0,Kn.y1)()&&localStorage.removeItem("bridgeState")},onTransferInProgress(e){this.isTransferInProgress=e,this.checkInputs()},async getPairGasFee(){let e,t=0;try{const t=await fetch(this.params.getGasUrl,{method:"GET",cache:"no-store"});if(!t.ok)throw new Error(`An error has occured: ${t.status}`);e=await t.json()}catch(n){return void(this.gasPrice=0)}"eth"===this.pair&&(t=parseFloat(e.average)/10),"bsc"===this.pair&&(t=parseFloat(e.result.SafeGasPrice)),this.gasPrice=t>0?t:this.params.defaultGwei},onHeaderConnectEthereumWalletClick(){this.walletsPopupState="opened"},onWalletConnected(e){this.ethereumProvider=(0,re.Xl)(e),this.bridgeProcessorIsLoading=!this.$refs.bridgeProcessor,this.isEthereumWalletConnected=!0,this.walletsPopupState="closed",this.$refs?.bridgeProcessor?.onTokenChange(this.token),this.ethereumProvider.on("disconnect",(()=>{this.isTransferInProgress?this.walletsPopupState="opened-uncancellable":(this.ethereumProvider=null,this.isEthereumWalletConnected=!1,this.bridgeProcessorIsLoading=!1)}))},onBridgeProcessorReady(){this.loadStateProcessor(),this.bridgeProcessorIsLoading=!1},onBridgeTransferError(e){"amount"===e.input&&(this.errors.amount=e.message),"toAddress"===e.input&&(this.errors.toAddress=e.message)}}});const sr=(0,w.Z)(rr,[["render",Z],["__scopeId","data-v-5d350f45"]]);var or=sr;const ir=[{path:"/",name:"Bridge",component:or}],ar=(0,_.p7)({history:(0,_.PO)("/"),routes:ir});var lr=ar,dr=(0,c.MT)({state:()=>({alert:null}),mutations:{setAlert(e,t){e.alert=t}},getters:{alert(e){return e.alert}},actions:{}});(0,r.ri)(A).use(s.Z).use(z).use(dr).use(lr).mount("#app")},7450:function(e,t,n){"use strict";n.d(t,{Po:function(){return a},p9:function(){return o},zK:function(){return i}});var r=n(4738),s=n.n(r);const o=s().utils.toNano("10"),i={appName:"TON Bridge",appLogoUrl:"https://ton.org/bridge/favicon.ico",tonTransferUrl:"ton://transfer/<BRIDGE_ADDRESS>?amount=<AMOUNT>&text=swapTo%23<TO_ADDRESS>",tonExplorerUrl:{main:"https://tonscan.org/address/<ADDRESS>",test:"https://testnet.tonscan.org/address/<ADDRESS>"},networks:{eth:{main:{getGasUrl:"https://ethereumgas.toncenter.com",explorerUrl:"https://etherscan.io/token/<ADDRESS>",wTonAddress:"0x582d872a1b094fc48f5de31d3b73f2d9be47def1",tonBridgeAddress:"Ef_dJMSh8riPi3BTUTtcxsWjG8RLKnLctNjAM4rw8NN-xWdr",tonCollectorAddress:"EQCuzvIOXLjH2tv35gY4tzhIvXCqZWDuK9kUhFGXKLImgxT5",tonMultisigAddress:"kf87m7_QrVM4uXAPCDM4DuF9Rj5Rwa5nHubwiQG96JmyAo-S",tonBridgeAddressV2:"Ef-1JetbPF9ubc1ga-57oHoOyDA1IShJt-BVlJnA9rrVTfrB",tonBridgeV2EVMAddress:"0xb323692b6d4DB96af1f52E4499a2bd0Ded9af3C5",tonCollectorAddressV2:"EQDF6fj6ydJJX_ArwxINjP-0H8zx982W4XgbkKzGvceUWvXl",tonMultisigAddressV2:"Ef8hHxV0v2I9FHh3CMX91WXjKaJav6SQlemEQm8ZvPBJdLde",tonCenterUrl:"https://toncenter.com/api/v2/jsonRPC",tonCenterApiKey:"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b",rpcEndpoint:"https://bridge.ton.org/mainnet/",chainId:1,blocksConfirmations:65,defaultGwei:25,toncoinTransferTo_gasPrice:.004,toncoinTransferFrom_gasPrice:.001,tokenTransferTo_gasPrice:.00173,tokenTransferFrom_gasPrice:.0036},test:{getGasUrl:"https://ethereumgas.toncenter.com",explorerUrl:"https://goerli.etherscan.io/token/<ADDRESS>",wTonAddress:"0xDB15ffaf2c88F2d89Db9365a5160D5b8c9448Ea6",tonBridgeAddress:"Ef-56ZiqKUbtp_Ax2Qg4Vwh7yXXJCO8cNJAb229J6XXe4-aC",tonCollectorAddress:"EQCA1W_I267-luVo9CzV7iCcrA1OO5vVeXD0QHACvBn1jIVU",tonMultisigAddress:"kf-OV1dpgFVEzEmyvAETT8gnhqZ1IqHn8RzT6dmEmvnze-9n",tonBridgeV2EVMAddress:"0x4Efd8f04B6fb4CFAF0cfaAC11Fb489b97DBebB60",tonBridgeAddressV2:"Ef-lJBALjXSSwSKiedKzriSHixwQUxJ1BxTE05Ur5AXwZVjp",tonCollectorAddressV2:"EQC1ZeKX1LNrlQ4bwi3je3KVM1AoZ3rkeyHM5hv9pYzmIh4v",tonMultisigAddressV2:"kf9NLH8CsGUkEKGYzCxaLd9Th6T5YkO-MXsCEU9Rw1fiRhf9",tonCenterUrl:"https://testnet.toncenter.com/api/v2/jsonRPC",tonCenterApiKey:"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b",rpcEndpoint:"https://goerli.infura.io/v3/1f24ea6b55e9432d993a9c0ff68eeee5",chainId:5,blocksConfirmations:12,defaultGwei:25,toncoinTransferTo_gasPrice:.004,toncoinTransferFrom_gasPrice:.001,tokenTransferTo_gasPrice:.00173,tokenTransferFrom_gasPrice:.0036}},bsc:{main:{getGasUrl:"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle",explorerUrl:"https://bscscan.com/token/<ADDRESS>",wTonAddress:"0x76A797A59Ba2C17726896976B7B3747BfD1d220f",tonBridgeAddress:"Ef9NXAIQs12t2qIZ-sRZ26D977H65Ol6DQeXc5_gUNaUys5r",tonCollectorAddress:"EQAHI1vGuw7d4WG-CtfDrWqEPNtmUuKjKFEFeJmZaqqfWTvW",tonMultisigAddress:"kf8OvX_5ynDgbp4iqJIvWudSEanWo0qAlOjhWHtga9u2Yo7j",tonBridgeV2EVMAddress:"",tonBridgeAddressV2:"",tonCollectorAddressV2:"",tonMultisigAddressV2:"",tonCenterUrl:"https://toncenter.com/api/v2/jsonRPC",tonCenterApiKey:"d843619b379084d133f061606beecbf72ae2bf60e0622e808f2a3f631673599b",rpcEndpoint:"https://bsc-dataseed.binance.org/",chainId:56,blocksConfirmations:65,defaultGwei:5,toncoinTransferTo_gasPrice:8e-4,toncoinTransferFrom_gasPrice:2e-4,tokenTransferTo_gasPrice:.0016,tokenTransferFrom_gasPrice:4e-4},test:{getGasUrl:"https://gbsc.blockscan.com/gasapi.ashx?apikey=key&method=gasoracle",explorerUrl:"https://testnet.bscscan.com/token/<ADDRESS>",wTonAddress:"0xdb15ffaf2c88f2d89db9365a5160d5b8c9448ea6",tonBridgeAddress:"Ef_GmJntTDokxfhLGF1jRvMGC8Jav2V5keoNj4El2jzhHsID",tonCollectorAddress:"EQDBNfV4DQzSyzNMw6BCTSZSoUi-CzWcYNsfhKxoDqfrwFtS",tonMultisigAddress:"kf83VnnXuaqQV1Ts2qvUr6agacM0ydOux5NNa1mcU-cEO693",tonBridgeV2EVMAddress:"0x501f187829Be89Fd84334aB402a99c626c8c7B65",tonBridgeAddressV2:"Ef-QhQLNRndggmLKXzFzA-F51rnjZ5yWY3ww2JjcHjEDohCg",tonCollectorAddressV2:"EQDTtD0leOd2aRtfX8sVwhdIpgoO1kvYj2iiBpbOMBgmi_I7",tonMultisigAddressV2:"kf8n7jRSwkvkKoqlt8YGyQ93IivUp52j6oIlleVsuKS2NYnr",tonCenterUrl:"https://testnet.toncenter.com/api/v2/jsonRPC",tonCenterApiKey:"52993043eb68ddd4dfee9f0f6a2a5d341226c7b5c77c4ae7758c158d6c7e00c4",rpcEndpoint:"https://data-seed-prebsc-1-s1.binance.org:8545/",chainId:97,blocksConfirmations:12,defaultGwei:5,toncoinTransferTo_gasPrice:8e-4,toncoinTransferFrom_gasPrice:2e-4,tokenTransferTo_gasPrice:.0016,tokenTransferFrom_gasPrice:4e-4}}}},a=(e,t,n,r)=>{if(n){if("eth"===r)switch(e){case"usdt":return t?"EQCyOkdBxpGvZ1stp7uZQi25WXH3lPg3_-nZ6xEbxcJXeZvV":"0x7120c3f1528e1356b2aac0bb6a0e5acb008cd9e5";case"usdc":return"";case"dai":return"";case"wbtc":return""}else if("bsc"===r)switch(e){case"usdt":return t?"EQASJnz-JMQLwzH0qxohY0IK6jahBlTd63rtccA17G7tzL5t":"0xe934b638b61d9c51bdb2cde62b8edae3a1f2064a";case"usdc":return"";case"dai":return"";case"wbtc":return""}return""}if("eth"===r)switch(e){case"usdt":return t?"EQBynBO23ywHy_CgarY9NK9FTz0yDsG82PtcbSTQgGoXwiuA":"0xdAC17F958D2ee523a2206206994597C13D831ec7";case"usdc":return t?"EQB-MPwrd1G6WKNkLz_VnV6WqBDd142KMQv-g1O-8QUA3728":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48";case"dai":return t?"EQDo_ZJyQ_YqBzBwbVpMmhbhIddKtRP99HugZJ14aFscxi7B":"0x6B175474E89094C44Da98b954EedeAC495271d0F";case"wbtc":return t?"EQDcBkGHmC4pTf34x3Gm05XvepO5w60DNxZ-XT4I6-UGG5L5":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"}return""}},7688:function(e,t,n){"use strict";function r(e){return new Promise(((t,n)=>{const r=document.createElement("script"),s=document.getElementsByTagName("script")[0];r.async=!0,r.onload=()=>{r.onload=null,r.onerror=null,setTimeout(t,0)},r.onerror=()=>{r.onload=null,r.onerror=null,setTimeout(n,0)},r.src=e,s.parentNode.insertBefore(r,s)}))}function s(){try{return"localStorage"in window&&null!==window["localStorage"]}catch(e){return!1}}function o(e){return"number"===typeof e?e:"string"===typeof e?parseInt(e,e.toLowerCase().startsWith("0x")?16:10):0}n.d(t,{DQ:function(){return o},iM:function(){return r},y1:function(){return s}})},8988:function(e,t,n){var r={"./metamask/index":[9735,494,735],"./walletConnect/index":[1461,494,461],"./walletLink/index":[1686,686]};function s(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],s=t[0];return Promise.all(t.slice(1).map(n.e)).then((function(){return n(s)}))}s.keys=function(){return Object.keys(r)},s.id=8988,e.exports=s},1793:function(e,t,n){"use strict";e.exports=n.p+"img/gem@large.0d6c241e.png"},8677:function(){},2808:function(){},6601:function(){},6528:function(){},9529:function(){},5024:function(){}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=e,function(){n.amdO={}}(),function(){var e=[];n.O=function(t,r,s,o){if(!r){var i=1/0;for(c=0;c<e.length;c++){r=e[c][0],s=e[c][1],o=e[c][2];for(var a=!0,l=0;l<r.length;l++)(!1&o||i>=o)&&Object.keys(n.O).every((function(e){return n.O[e](r[l])}))?r.splice(l--,1):(a=!1,o<i&&(i=o));if(a){e.splice(c--,1);var d=s();void 0!==d&&(t=d)}}return t}o=o||0;for(var c=e.length;c>0&&e[c-1][2]>o;c--)e[c]=e[c-1];e[c]=[r,s,o]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce((function(t,r){return n.f[r](e,t),t}),[]))}}(),function(){n.u=function(e){return"js/"+e+"."+{461:"9de75747",494:"768525cc",612:"cbff4b65",686:"c70d4011",735:"6c870ff0",983:"057ea28d"}[e]+".js"}}(),function(){n.miniCssF=function(e){}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="ton-token-bridge:";n.l=function(r,s,o,i){if(e[r])e[r].push(s);else{var a,l;if(void 0!==o)for(var d=document.getElementsByTagName("script"),c=0;c<d.length;c++){var u=d[c];if(u.getAttribute("src")==r||u.getAttribute("data-webpack")==t+o){a=u;break}}a||(l=!0,a=document.createElement("script"),a.charset="utf-8",a.timeout=120,n.nc&&a.setAttribute("nonce",n.nc),a.setAttribute("data-webpack",t+o),a.src=r),e[r]=[s];var h=function(t,n){a.onerror=a.onload=null,clearTimeout(p);var s=e[r];if(delete e[r],a.parentNode&&a.parentNode.removeChild(a),s&&s.forEach((function(e){return e(n)})),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=h.bind(null,a.onerror),a.onload=h.bind(null,a.onload),l&&document.head.appendChild(a)}}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){n.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){n.p="/"}(),function(){var e={143:0};n.f.j=function(t,r){var s=n.o(e,t)?e[t]:void 0;if(0!==s)if(s)r.push(s[2]);else{var o=new Promise((function(n,r){s=e[t]=[n,r]}));r.push(s[2]=o);var i=n.p+n.u(t),a=new Error,l=function(r){if(n.o(e,t)&&(s=e[t],0!==s&&(e[t]=void 0),s)){var o=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;a.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",a.name="ChunkLoadError",a.type=o,a.request=i,s[1](a)}};n.l(i,l,"chunk-"+t,t)}},n.O.j=function(t){return 0===e[t]};var t=function(t,r){var s,o,i=r[0],a=r[1],l=r[2],d=0;if(i.some((function(t){return 0!==e[t]}))){for(s in a)n.o(a,s)&&(n.m[s]=a[s]);if(l)var c=l(n)}for(t&&t(r);d<i.length;d++)o=i[d],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return n.O(c)},r=self["webpackChunkton_token_bridge"]=self["webpackChunkton_token_bridge"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[998],(function(){return n(8695)}));r=n.O(r)})();
//# sourceMappingURL=app.0da833ff.js.map